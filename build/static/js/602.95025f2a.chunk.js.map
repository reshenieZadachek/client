{"version":3,"file":"static/js/602.95025f2a.chunk.js","mappings":"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","sources":["components/SwimMes.js","pages/Admin.js","http/admin.js","pages/Auth.js","http/rooms.js","components/wrapper/WrapButton.js","components/wrapper/ProgressBar.js","components/wrapper/WrapButtonMob.js","components/wrapper/menuMobile.js","components/wrapper/WrapperCont1.js","http/game.js","components/wrapper/Statrow.js","components/wrapper/WrapperCont2.js","components/wrapper/Wrapper.js","pages/Game.js","components/learn/FirstStage.js","components/learn/Market.js","components/learn/SecondStage.js","components/learn/ThirdStage.js","pages/Learn.js","http/profile.js","components/profile/ProfInfo.js","pages/Profile.js","pages/Questions.js","http/rewiews.js","components/reviews/ReviewsText.js","components/reviews/Pages.js","pages/Reviews.js","components/room/RoomButtons.js","components/room/Firstlvl.js","components/room/Secondlvl.js","components/room/Thirdlvl.js","components/room/ViewRoom.js","components/room/WrapperContRoom.js","pages/Rooms.js","components/settings/WorkRow.js","components/settings/SetMenu.js","pages/Settings.js","routes.js","components/AppRouter.js","utils/const.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SwimMes = ({ text }) => {\r\n    const [isVisible, setIsVisible] = useState(true);\r\n  \r\n    useEffect(() => {\r\n      const timer = setTimeout(() => {\r\n        setIsVisible(false);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }, []);\r\n  \r\n    return (\r\n      <>\r\n        {isVisible && (\r\n          <div className=\"popup visible\">\r\n            <div className=\"message_of_edits_elem\">\r\n                <p className=\"msg\" style={{backgroundColor:'#20242d'}}>\r\n                {text}\r\n                </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default SwimMes;","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport SwimMes from '../components/SwimMes';\r\nimport { httpGetBalUser, httpGetBanUser, httpPostUserBal, httpPostUserBan } from '../http/admin';\r\n\r\nconst  Admin = () => {\r\n    const [ banId, setBanId ] = useState(0);\r\n    const [debouncedValue, setDebouncedValue] = useState(banId);\r\n    const [ banLogin, setBanLogin ] = useState('логин');\r\n    const [ banEmail, setBanEmail ] = useState('мэйл');\r\n    const [ banBalance, setBanBalance ] = useState('0');\r\n    const [ banStatus, setBanStatus ] = useState(false);\r\n\r\n    const [popups, setPopups] = useState([]);\r\n\r\n    const [debouncedValue1, setDebouncedValue1] = useState(banId);\r\n    const [ popolnId, setPopoknId ] = useState(0);\r\n    const [ popolnBal, setPopolnBal ] = useState(0);\r\n    const [ loginBal, setLoginBal ] = useState('логин');\r\n    const [ plusBal, setPlusBal ] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        // Устанавливаем таймер\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(banId);\r\n        }, 2000);\r\n    \r\n        // Очищаем таймер при каждом изменении inputValue\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      }, [banId]);\r\n    \r\n\r\n      useEffect(() => {\r\n        if (debouncedValue) {\r\n          // Отправка запроса на сервер\r\n          GetBanUs(debouncedValue);\r\n        }\r\n      }, [debouncedValue]);\r\n\r\n      const GetBanUs = async (value) => {\r\n        try {\r\n            const data = await httpGetBanUser(value)\r\n            setBanLogin(data.login)\r\n            setBanEmail(data.email)\r\n            setBanBalance(data.balance)\r\n            setBanStatus(data.isBanned)\r\n          } catch (error) {\r\n            console.error('Error sending request:', error);\r\n          }\r\n      };\r\n      useEffect(() => {\r\n        // Устанавливаем таймер\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue1(popolnId);\r\n        }, 2000);\r\n    \r\n        // Очищаем таймер при каждом изменении inputValue\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      }, [popolnId]);\r\n    \r\n\r\n      useEffect(() => {\r\n        if (debouncedValue1) {\r\n          // Отправка запроса на сервер\r\n          GetBalUs(debouncedValue1);\r\n        }\r\n      }, [debouncedValue1]);\r\n\r\n      const GetBalUs = async (value) => {\r\n        try {\r\n            const data = await httpGetBalUser(value)\r\n            setLoginBal(data.login)\r\n            setPopolnBal(data.balance)\r\n          } catch (error) {\r\n            console.error('Error sending request:', error);\r\n          }\r\n      };\r\n\r\n      const PostBan = async () => {\r\n        try {\r\n            let data;\r\n            const formData = new FormData()\r\n            formData.append('id', banId)\r\n            formData.append('isBanned', !banStatus)\r\n            data = await httpPostUserBan(formData)\r\n            if(data == 'Статус пользователя обновлен'){\r\n                setBanStatus(!banStatus)\r\n            }\r\n            const newPopup = { id: Date.now(), data };\r\n            setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n            // Удаляем всплывающее окно через 5 секунд\r\n            setTimeout(() => {\r\n            setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n            }, 5000);\r\n          } catch (error) {\r\n            console.error('Error sending request:', error);\r\n          }\r\n      };\r\n      const PostPopoln = async () => {\r\n        try {\r\n            let data;\r\n            const formData = new FormData()\r\n            formData.append('id', popolnId)\r\n            formData.append('plusBal', plusBal)\r\n            formData.append('polsBal', popolnBal)\r\n            data = await httpPostUserBal(formData)\r\n            if(data == 'Баланс пользователя обновлен'){\r\n                setPopolnBal(parseInt(popolnBal) + parseInt(plusBal))\r\n            }\r\n            const newPopup = { id: Date.now(), data };\r\n            setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n            // Удаляем всплывающее окно через 5 секунд\r\n            setTimeout(() => {\r\n            setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n            }, 5000);\r\n          } catch (error) {\r\n            console.error('Error sending request:', error);\r\n          }\r\n      };\r\n\r\n  return (\r\n    <Wrapper>\r\n        <Element>\r\n            <label>\r\n                Заблокировать\r\n            </label>\r\n            <EL>\r\n                <label>\r\n                    Логин пользователя:\r\n                </label>\r\n                <Data>\r\n                {banLogin}\r\n                </Data>\r\n                <label>\r\n                    Email пользователя:\r\n                </label>\r\n                <Data>\r\n                {banEmail}\r\n                </Data>\r\n                <label>\r\n                    Баланс пользователя:\r\n                </label>\r\n                <Data>\r\n                {banBalance}\r\n                </Data>\r\n                <label>\r\n                    Статус аккаунта:\r\n                </label>\r\n                <Data>\r\n                {banStatus == true\r\n                ?\r\n                'Заблокирован'\r\n                :\r\n                'Разблокирован'\r\n                }\r\n                </Data>\r\n            </EL>\r\n            <EL>\r\n                <Input placeholder='id' onChange={e => setBanId(e.target.value)} value={banId}/>\r\n                <div><But onClick={PostBan}>{banStatus == true\r\n                ?\r\n                'Разблокировать'\r\n                :\r\n                'Заблокировать'\r\n                }</But></div>\r\n            </EL>\r\n        </Element>\r\n\r\n\r\n        <Element>\r\n            <label>\r\n                Пополнить баланс\r\n            </label>\r\n            <div>\r\n                <EL>\r\n                    <Input placeholder='id' onChange={e => setPopoknId(e.target.value)} value={popolnId}/>\r\n                    <div>\r\n                        Логин пользователя: <Data>{loginBal}</Data>\r\n                    </div>\r\n                    <div>\r\n                        баланс пользователя сейчас: <Data>{popolnBal}</Data>\r\n                    </div>\r\n                </EL>\r\n                <EL>\r\n                    <Input placeholder='Сколько прибавить' onChange={e => setPlusBal(e.target.value)} value={plusBal}/>\r\n                    <div>\r\n                        баланс пользователя будет: <Data>{parseInt(popolnBal) + parseInt(plusBal)}</Data>\r\n                    </div>\r\n                </EL>\r\n                <EL><But onClick={PostPopoln}>Подтвердить</But></EL>\r\n            </div>\r\n        </Element>\r\n        {popups.map(popup => (\r\n        <SwimMes key={popup.id} text={popup.data} />\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\nconst Element = styled.div`\r\ndisplay: flex;\r\nflex: 1 1 auto;\r\nbackground-color: #2e3442;\r\npadding: 10px;\r\nborder-radius: 10px;\r\nwidth: 90%;\r\nflex-direction: column;\r\n`\r\nconst EL = styled.div`\r\nmargin: 10px 0;\r\n`\r\nconst But = styled.button`\r\n    margin-top: 20px;\r\n    padding: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    flex: 0 1 auto;\r\n    border-radius: 10px;\r\n    background-color: #f6a617;\r\n    border: none;\r\n    color: white;\r\n    cursor: pointer;\r\n    transition-duration: .5s;\r\n`\r\nconst Data = styled.div`\r\ndisplay: flex;\r\nwidth: fit-content;\r\nborder-bottom: 1px solid #f6a617;\r\n`\r\nconst Input = styled.input`\r\nmargin: 10px 0;\r\npadding: 10px;\r\nborder-radius: 10px;\r\nborder: none;\r\n\r\n    margin: 0;\r\n    background-color: #262b37;\r\n    min-height: 20px;\r\n    padding: 10px;\r\n    background: #262b37;\r\n    color: white;\r\n    border: unset;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    max-height: 40px;\r\n    flex: 1 1 auto;\r\n`\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 75px;\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    padding-top: 10px;\r\n    width: 100%;\r\n    max-width: 1200px;\r\n    flex-wrap: wrap;\r\n    min-height: calc(100vh - 197px);\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-top: 0.5px solid #2d3340;\r\n    color: white;\r\n    font-size: 16pt;\r\n`\r\nexport default Admin; \r\n","import { $authhost } from \"./index\";\r\n\r\nexport const httpGetBanUser = async (id) =>{\r\n    const {data} = await $authhost.get(`admin/getbanpeople/${id}`)\r\n    return data\r\n}\r\nexport const httpGetBalUser = async (id) =>{\r\n    const {data} = await $authhost.get(`admin/getbalpeople/${id}`)\r\n    return data\r\n}\r\nexport const httpPostUserBan = async (postus) =>{\r\n    const {data} = await $authhost.post(`admin/banpeople`, postus)\r\n    return data\r\n}\r\nexport const httpPostUserBal = async (postus) =>{\r\n    const {data} = await $authhost.post(`admin/balpeople`, postus)\r\n    return data\r\n}\r\nexport const httpPostRewiewDel = async (postus) =>{\r\n    try{\r\n        const {data} = await $authhost.post(`admin/deleterew`, postus)\r\n        return data\r\n    }\r\n    catch (e) {\r\n        const mas = e.response.data.message\r\n        return mas\r\n    }\r\n    \r\n}\r\n\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom'\r\nimport { GAME_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE } from '../utils/const'\r\nimport { Context } from '..'\r\nimport { login, registration } from '../http/userAPI'\r\nimport { observer } from 'mobx-react-lite'\r\nimport SwimMes from '../components/SwimMes'\r\n\r\nconst  Auth = observer(() => {\r\n  const location = useLocation()\r\n  const navigate  = useNavigate ()\r\n  const isLogin = location.pathname === LOGIN_ROUTE\r\n\r\n  const [popups, setPopups] = useState([]);\r\n\r\n  const {user} = useContext(Context)\r\n  \r\n    const [loginForm,setLoginForm] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [confirmPassword,setConfirmPassword] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [file,setFile] = useState('')\r\n    const [code,setCode] = useState('')\r\n\r\n  const click = async () =>{\r\n    try {\r\n      let data;\r\n      const formData = new FormData()\r\n      if(isLogin){\r\n        formData.append('login', loginForm)\r\n        formData.append('password', password)\r\n        data = await login(formData)\r\n      }else{\r\n        formData.append('login', loginForm)\r\n        formData.append('password', password)\r\n        formData.append('confpassword', confirmPassword)\r\n        formData.append('email', email)\r\n        file ? formData.append('flag', true) : formData.append('flag', false)\r\n        formData.append('file', file)\r\n        formData.append('code', code)\r\n        formData.append('role', 'USER')\r\n        data = await registration(formData)\r\n      }\r\n      user.setUser(data)\r\n      user.setIsAuth(true)\r\n      navigate(GAME_ROUTE)\r\n    } catch (e) {\r\n      const newPopup = { id: Date.now(), data: e.response.data.message };\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n    }\r\n  }\r\n  const selectFile = e => {\r\n    setFile(e.target.files[0])\r\n  }\r\n  return (\r\n    <AuthCon>\r\n      <div style={{maxWidth: 800, flex: '1 1 auto', display: 'flex', flexWrap:'wrap',color:'white',border:'2px solid #2d3340',padding:20}}>\r\n                <h2 style={{ width: '100%', textAlign: 'center' ,}}>{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\r\n                <form style={{display: 'flex', flexDirection:'column',justifyContent:'center',width: '100%',}}>\r\n                    <label>\r\n                      Логин\r\n                    </label>\r\n                    <input\r\n                        className=\"inputauth important\"\r\n                        placeholder={isLogin ? \"Введите ваш логин или email...\" : \"Введите ваш логин...\"}\r\n                        value={loginForm}\r\n                        onChange={e => setLoginForm(e.target.value)}\r\n                         />\r\n                        \r\n                    <label>\r\n                      Пароль\r\n                    </label>\r\n                    <input\r\n                        className=\"inputauth important\"\r\n                        placeholder=\"Введите ваш пароль\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                    {\r\n                      !isLogin ?\r\n                      <div style={{display:'contents',}}>\r\n                        <label>\r\n                        Подтверждение пароля\r\n                        </label>\r\n                        <input\r\n                            className=\"inputauth important\"\r\n                            placeholder=\"Повторите ваш пароль\"\r\n                            type=\"password\"\r\n                            value={confirmPassword}\r\n                          onChange={e => setConfirmPassword(e.target.value)}\r\n                        />\r\n                        <label>\r\n                          Почта\r\n                        </label>\r\n                        <input\r\n                            className=\"inputauth important\"\r\n                            placeholder=\"Введите вашу почту\"\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                        <label>\r\n                          Изображение профиля\r\n                        </label>\r\n                        <input\r\n                            className=\"inputauth\"\r\n                            type=\"file\"\r\n                            onChange={selectFile}\r\n                        />\r\n                        <label>\r\n                          Код приглашения\r\n                        </label>\r\n                        <input\r\n                            className=\"inputauth\"\r\n                            placeholder=\"Введите код приглашения\"\r\n                            type=\"text\"\r\n                            value={code}\r\n                            onChange={e => setCode(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      :\r\n                      false\r\n                    }\r\n                    <button type=\"button\" className=\"ButSubAuth\" onClick={click}>\r\n                            {isLogin \r\n                            ? \r\n                              'Войти' \r\n                            : 'Зарегистрироваться'\r\n                              \r\n                            }\r\n                        </button>\r\n                    <div>\r\n                        {isLogin ?\r\n                            <div>\r\n                                Нет аккаунта? <NavLink  className='LinkForm' to={REGISTRATION_ROUTE} type=\"button\">Зарегистрируйся!</NavLink>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                Есть аккаунт? <NavLink  className='LinkForm' to={LOGIN_ROUTE} type=\"button\">Войдите!</NavLink>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            {popups.map(popup => (\r\n        <SwimMes key={popup.id} text={popup.data} />\r\n      ))}\r\n    </AuthCon>\r\n  )\r\n})\r\nexport default Auth; \r\n\r\nconst AuthCon = styled.div`\r\n  margin-top: 75px;\r\nposition: relative;\r\nflex-wrap: wrap;\r\ndisplay: flex;\r\nflex: 1 1 auto;\r\npadding: 20px;\r\nwidth:100%;\r\nmin-height: calc(100vh - 197px);\r\njustify-content: center;\r\nalign-items: center;\r\nborder-top: 0.5px solid #2d3340;\r\n`\r\n\r\n","import { $authhost } from \"./index\";\r\n\r\nexport const httpGetMyRooms = async (id,price) =>{\r\n    const {data} = await $authhost.get(`room/my?id=${id}&price=${price}`)\r\n    return data\r\n}\r\nexport const httpPostJoin = async (postus) =>{\r\n    const {data} = await $authhost.post(`room/join`, postus)\r\n    return data\r\n}\r\n\r\nexport const httpEnd0 = async (postus) =>{\r\n    const {data} = await $authhost.post(`room/end`, postus)\r\n    return data\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Context } from '../..'\r\nimport { httpPostJoin } from '../../http/rooms'\r\nimport { ROOMS_ROUTE } from '../../utils/const'\r\nimport SwimMes from '../SwimMes'\r\n\r\nconst WrapButtons = observer((props) => {\r\n    const { user } = useContext(Context)\r\n    const navigate  = useNavigate()\r\n    const stylelist = {\r\n        background: 'red',\r\n        margin: '15px 10px',\r\n        height: '100px',\r\n        color: 'white',\r\n        backgroundColor: '#f6a617',\r\n        minHeight: '100px',\r\n        maxHeight: '100px',\r\n        margin: '20px 0',\r\n\r\n        color: 'white',\r\n        display: 'flex',\r\n        minHeight: '50px',\r\n        width: '90%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        flex: '1 1 auto',\r\n        borderRadius: '10px',\r\n        cursor: 'pointer',\r\n        transitionDuration: '.5s',\r\n    }\r\n    \r\n    const styleLink = {\r\n        color: 'white',\r\n        margin: '5px 0',\r\n        padding: '5px',\r\n        display: 'flex',\r\n        minHeight: '50px',\r\n        width: '90%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        flex: '1 1 auto',\r\n        borderRadius: '10px',\r\n        backgroundColor: '#f6a617',\r\n        cursor: 'pointer',\r\n        transitionDuration: '.5s',\r\n    }\r\n    const [popups, setPopups] = useState([]);\r\n    const joinFunc = async () => {\r\n        let data;\r\n        const formData = new FormData()\r\n        formData.append('id', user.User.id)\r\n        formData.append('price', props.val)\r\n        data = await httpPostJoin(formData)\r\n        if (data.mes == 'Вы успешно вошли в комнату') {\r\n            user.User.roomlvl = data.roomlvl\r\n            user.User.balance = data.balance\r\n            user.User.room = data.room\r\n            user.User.price = data.price\r\n            user.useLeader = data.useLeader\r\n            navigate(ROOMS_ROUTE)\r\n        }\r\n        const newPopup = { id: Date.now(), data };\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n    }\r\n    const PassF = () => {\r\n        const data = ['Вы не вошли в аккаунт'];\r\n        const newPopup = { id: Date.now(), data};\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n    }\r\n    let newCost = props.val-(props.val*0.1)\r\n  return (<WrapButtonst>\r\n    {\r\n        props.color ? \r\n        \r\n        <Link className='WrapBut' to={props.go} style={stylelist}>\r\n            {props.text}\r\n        </Link>\r\n        \r\n        :\r\n            (props.row == 1\r\n                ?\r\n                <Buttonst onClick={ user.isAuth ? joinFunc : PassF} className='WrapBut'>\r\n                    {props.text} &nbsp;\r\n                    <b className= {\r\n                        (user.isAuth & user.Lead > 0 & !(user.useLead))?\r\n                        'cell'\r\n                        :\r\n                        ''\r\n                    } >{` ${props.val}`}</b> &nbsp;{(user.isAuth & user.Lead > 0 & !(user.useLead))?newCost:''} \r\n                </Buttonst>\r\n            :\r\n                <Link className='WrapBut' to={props.go} style={styleLink}>\r\n                    {props.text}\r\n                </Link>\r\n            )\r\n        \r\n    }\r\n    {popups.map(popup => (\r\n        <SwimMes key={popup.id} text={popup.data} />\r\n      ))}\r\n  </WrapButtonst>\r\n        \r\n        \r\n  )\r\n})\r\nconst WrapButtonst = styled.div`\r\n    background-color: #00000000;\r\n    transition-duration: .5s;\r\n    padding: 0;\r\n    flex-direction: row;\r\n    width: 90%;\r\n    position: relative;\r\n    border-radius: 10px;\r\n    display: flex;\r\n`\r\n\r\nconst Buttonst = styled.div`\r\n    flex-direction: row;\r\n    width: 90%;\r\n    position: relative;\r\n    margin: 5px 0;\r\n    display: flex;\r\n    min-height: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    flex: 1 1 auto;\r\n    border-radius: 10px;\r\n    background-color: #f6a617;\r\n    cursor: pointer;\r\n    transition-duration: .5s;\r\n    font-size: 11pt;\r\n    color: white;\r\n`\r\n\r\nexport default WrapButtons; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Context } from '../..';\r\nimport { ROOMS_ROUTE } from '../../utils/const';\r\nimport '../../App.css';\r\n\r\nconst ProgressBar = ({ level, text }) => {\r\n  const [progressWidth, setProgressWidth] = useState(0);\r\n  const { user } = useContext(Context)\r\n  useEffect(() => {\r\n    // Обновление ширины прогресса при изменении уровня\r\n    if (level === 'Вы не вступили в группу') {\r\n        const progressBarWidth = 0 + '%';\r\n        setProgressWidth(progressBarWidth);   \r\n    }\r\n    else{\r\n        const progressBarWidth = (level/16)*100 + '%';\r\n        setProgressWidth(progressBarWidth);\r\n    }\r\n    \r\n  }, [level]);\r\n\r\n  return (\r\n    <Link to={level != 'Вы не вступили в группу' && ROOMS_ROUTE}  className=\"progress-bar\">\r\n        <div className='swimTextBar'>\r\n            {\r\n                level === 'Вы не вступили в группу'?\r\n                level\r\n                :\r\n                text\r\n            }\r\n        </div>\r\n      <div className=\"progress\" style={{ width: progressWidth }}>\r\n        \r\n      </div>\r\n      {\r\n        level === 'Вы не вступили в группу'?\r\n        ''\r\n        :\r\n        <div className=\"progress-text-people\">Человек в группе: {level}/16</div>\r\n      }\r\n      {\r\n        level === 'Вы не вступили в группу'?\r\n        ''\r\n        :\r\n        <div className=\"progress-text-lvl\">Уровень группы: {user.User.roomlvl}</div>\r\n      }\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Context } from '../..'\r\n\r\nconst WrapButtonsMob = observer((props) => {\r\n    const { user } = useContext(Context)\r\n    let newCost = props.val-(props.val*0.1)\r\n  return (\r\n  <WrapButtonst>\r\n                <Buttonst onClick={user.isAuth ? props.joinFunc : props.PassF} className='WrapBut'>\r\n                    {props.text} &nbsp;\r\n                    <b className= {\r\n                        (user.isAuth & user.Lead > 0 & !(user.useLead))?\r\n                        'cell'\r\n                        :\r\n                        ''\r\n                    } >{` ${props.val}`}</b> &nbsp;{(user.isAuth & user.Lead > 0 & !(user.useLead))?newCost:''} \r\n                </Buttonst>\r\n  </WrapButtonst>   \r\n  )\r\n})\r\nconst WrapButtonst = styled.div`\r\n    display: flex;\r\n\twidth: 100%;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\tbackground: #20242d;\r\n\talign-items: center;\r\n`\r\n\r\nconst Buttonst = styled.div`\r\n    flex-direction: row;\r\n    width: 80%;\r\n    position: relative;\r\n    margin: 5px 0;\r\n    display: flex;\r\n    min-height: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    flex: 1 1 auto;\r\n    border-radius: 10px;\r\n    background-color: #f6a617;\r\n    cursor: pointer;\r\n    transition-duration: .5s;\r\n    font-size: 11pt;\r\n    color: white;\r\n`\r\n\r\nexport default WrapButtonsMob; \r\n","import React from 'react';\r\nimport './MenuMobile.css';\r\nimport WrapButtonsMob from './WrapButtonMob'\r\nimport styled from 'styled-components'\r\nimport { MARKETING_ROUTE } from '../../utils/const';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MenuMobile = ({showModal, joinFunc, PassF, go}) => {\r\n  const styleLink = {\r\n    flexDirection: 'row',\r\n    width: '80%',\r\n    position: 'relative',\r\n    margin: '5px 0',\r\n    display: 'flex',\r\n    minHeight: '50px',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    flex: '1 1 auto',\r\n    borderRadius: '10px',\r\n    backgroundColor: '#f6a617',\r\n    cursor: 'pointer',\r\n    transitionDuration: '.5s',\r\n    fontSize: '11pt',\r\n    color: 'white',\r\n}\r\n  return (\r\n    <Menu className={`pc_none modal ${showModal ? 'show' : 'hide'}`}>\r\n        <Cont>\r\n        <WrapButtonsMob joinFunc={joinFunc} PassF={PassF} row = {1} text='Обучение за ' val={1000}  />\r\n        <WrapButtonsMob joinFunc={joinFunc} PassF={PassF} row = {1} text='Обучение за '  val={2500} />\r\n        <WrapButtonsMob joinFunc={joinFunc} PassF={PassF} row = {1} text='Обучение за '  val={5000} />\r\n        <WrapButtonsMob joinFunc={joinFunc} PassF={PassF} row = {1} text='Обучение за '  val={10000} />\r\n        <WrapBut>\r\n        <Link className='WrapBut' to={MARKETING_ROUTE} style={styleLink}>\r\n          Обучение маркетингу\r\n        </Link>\r\n        </WrapBut>\r\n        </Cont>\r\n    </Menu>\r\n  );\r\n};\r\nconst Menu = styled.div`\r\n    display: flex;\r\n    height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  width: 100vw;\r\n  z-index: 26;\r\n  background-color: #20242d;\r\n  overflow: hidden;\r\n`\r\nconst WrapBut = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background: #20242d;\r\n    align-items: center;\r\n`\r\nconst Cont = styled.div`\r\ndisplay: flex;\r\n    flex: 1 1 auto;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    `\r\nexport default MenuMobile;\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Context } from '../..'\r\nimport { httpGetDiscount } from '../../http/game'\r\nimport { MARKETING_ROUTE,ROOMS_ROUTE, TGCHAN_ROUTE } from '../../utils/const'\r\nimport WrapButtons from './WrapButton'\r\nimport ProgressBar from './ProgressBar';\r\nimport MenuMobile from './menuMobile'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport SwimMes from '../SwimMes'\r\nimport { httpEnd0, httpPostJoin } from '../../http/rooms'\r\n\r\nconst  WrapperCont1 = observer(() => {\r\n    const [popups, setPopups] = useState([]);\r\n    const navigate  = useNavigate()\r\n    const joinFunc = async (e) => {\r\n        let data;\r\n        const formData = new FormData()\r\n        formData.append('id', user.User.id)\r\n        formData.append('price', e.target.closest('.WrapBut').querySelector('b').textContent.trim())\r\n        data = await httpPostJoin(formData)\r\n        if (data.mes == 'Вы успешно вошли в комнату') {\r\n            user.User.roomlvl = data.roomlvl\r\n            user.User.balance = data.balance\r\n            user.User.room = data.room\r\n            user.User.price = data.price\r\n            user.useLeader = data.useLeader\r\n            navigate(ROOMS_ROUTE)\r\n        }\r\n        \r\n        const newPopup = { id: Date.now(), data };\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n    }\r\n    const PassF = () => {\r\n        const data = ['Вы не вошли в аккаунт'];\r\n        const newPopup = { id: Date.now(), data};\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n    }\r\n\r\n\r\n    const [show,setShow] = useState(0)\r\n    const { user } = useContext(Context)\r\n    let tessttt = 0\r\n    function pass(){\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        user.isAuth\r\n        ?\r\n        (httpGetDiscount(user.User.id).then(data => {\r\n          user.setLead(data.listUs.user.leader)\r\n          user.setUseLead(data.listUs.user.useLeader)\r\n          user.setProgress(data.listUs.progress)\r\n        }))\r\n        :\r\n        pass();\r\n    }, [])\r\n    let mobst = {display: 'none'};\r\n\r\n    const disp = {\r\n        display: 'flex',\r\n    }\r\n    const BGBalance ={\r\n        backgroundImage: `url(${process.env.REACT_APP_API_URL}balance.svg)`,\r\n    }\r\n    const [end, setEnd] = useState(user.User.end)\r\n    const end0 = async(e) => {\r\n        const formData = new FormData()\r\n        formData.append('id', user.User.id)\r\n        const data = await httpEnd0(formData)\r\n        setEnd(0)\r\n    }\r\n    return (\r\n    <WrapperrCont>\r\n                <RowItem1>\r\n                    {\r\n                        user.isAuth && \r\n                        <ContBar>\r\n                            <ProgressBar level={user.progress} text={'В ГРУППУ'} />\r\n                        </ContBar>\r\n                    }\r\n                    <TextWrap>\r\n                    <h3 style={{display:'contents',fontSize:'13pt',}}>MoneySlide</h3> - это сайт, который  научит вас такими навыками, как Маркетинг, Процентное накопления, обучит вас финансовой грамотности и все это в игровой форме.<br/>\r\n                    </TextWrap>\r\n                    <br/>\r\n                    <div>\r\n                    \r\n                    </div>\r\n                    <TextWrap>\r\n                    По завершению любого из обучений, вы будете получать слайды (внутриигровую валюту), которую потом вы сможете потратить на товары, донат в игры, ценные бумаги, или реальные деньги  в нашем магазине.<br/>\r\n                    </TextWrap>\r\n                    <br/>\r\n                    <TextWrap>\r\n                    Всю информацию и нужного бота  вы можете найти: <br/> <a href=\"https://t.me/perehodnik_ms\" style={{color:'#f6a617'}}>здесь</a>\r\n                    </TextWrap>\r\n                </RowItem1>    \r\n                <RowItem2 className='mobile_none'>\r\n                    <RowItem2El1>\r\n                        <WrapButtons row = {1} text='Обучение за ' val={1000} />\r\n                        <WrapButtons row = {1} text='Обучение за '  val={2500} />\r\n                        <WrapButtons row = {1} text='Обучение за '  val={5000} />\r\n                        <WrapButtons row = {1} text='Обучение за '  val={10000} />\r\n                    </RowItem2El1>\r\n                    <RowItem2El2>\r\n                        <WrapButtons go={MARKETING_ROUTE} row = {2} text='Обучение маркетингу' color='yellow' />\r\n                        <WrapButtons go={TGCHAN_ROUTE} row = {2} text='Наши контакты' />\r\n                        {/*<WrapButtons go={'https://qiwi.com/n/CEDIS371'} row = {2} text='Поддержать проект' />*/}\r\n                    </RowItem2El2>\r\n                </RowItem2>\r\n                \r\n                <SwimBut onClick={() => \r\n                            {\r\n                                setShow(!show)\r\n                                }}>\r\n\t                Обучения\r\n                </SwimBut>\r\n                <MenuMobile PassF={PassF} joinFunc={joinFunc} showModal={show} />\r\n\r\n                {popups.map(popup => (\r\n        <SwimMes key={popup.id} text={popup.data} />\r\n      ))}\r\n                \r\n             <EndModalContainer style={end === 1 ? disp : {}}>\r\n                <EndModal>\r\n                    <ModalTextCont><ModalText>За прохождение обучения вы получили</ModalText><ModalContSum><ModalSum>10000</ModalSum><BalansImg style={BGBalance}></BalansImg></ModalContSum></ModalTextCont>\r\n                    <ModalButton onClick={end0}>Ок</ModalButton>\r\n                </EndModal>\r\n            </EndModalContainer>   \r\n            </WrapperrCont>\r\n  )\r\n})\r\nconst ModalButton = styled.button`\r\n    padding: 10px 30px;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    background: #f6a617;\r\n    width: 80%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: none;\r\n    border-radius: 5px;\r\n    color: white;\r\n    font-size: 14pt;\r\n`\r\nconst ModalText = styled.div`\r\n    font-size: 16pt;\r\n`\r\nconst ModalContSum = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\nconst ModalSum = styled.div`\r\nfont-family: fantasy;\r\n    font-size: 45pt;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n`\r\nconst BalansImg = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\ntext-align: center;\r\nbackground-position: center center;\r\nbackground-repeat: no-repeat;\r\nbackground-size: cover;\r\nheight: 20px;\r\nwidth: 20px;\r\npadding: 10px;\r\n`\r\nconst ModalTextCont = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nflex-direction: column;\r\nalign-items: center;\r\nfont-size:25pt;\r\n`\r\nconst WrapperrCont = styled.div`\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    max-width: 1200px;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n    color: white;\r\n    @media screen and (max-width: 720px){\r\n        margin: 0 10px;\r\n    }\r\n`\r\n\r\nconst SwimBut = styled.div`\r\n    text-transform: uppercase;\r\n\t\tpadding: 1px;\r\n\t\tright: 0px;\r\n\t\tfont-size: 10pt;\r\n\t\ttop: 40%;\r\n\t\tdisplay: none;\r\n\t\tposition: fixed;\t\r\n\t\twidth: 15px;\r\n\t\twriting-mode: vertical-lr; \r\n\t\ttext-orientation: upright; \r\n\t\tbackground-color: #f6a617;\r\n\t\tuser-select: none;\r\n\t\tborder-radius: 5px 0 0 5px;\r\n\t\tz-index: 27;\r\n        @media screen and (max-width:720px){\r\n            display: flex;\r\n        }\r\n`\r\nconst RowItem1 = styled.div`\r\n    margin-right: 5px;\r\n    flex-direction: column;\r\n    flex: 1 1 70%;\r\n    padding: 10px;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    background-color: #262b37;\r\n`\r\n\r\nconst RowItem2 = styled.div`\r\n    margin-left: 5px;\r\n    flex: 0 1 30%;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    background-color: #262b37;\r\n`\r\n\r\nconst TextWrap = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    line-height: 28px; /* Уменьшение высоты строки для мобильных устройств */\r\n    font-size: 12pt; /* Уменьшение размера шрифта для мобильных устройств */\r\n`\r\nconst RowItem2El1 = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    \r\n`\r\nconst RowItem2El2 = styled.div`\r\n    flex: 1 1 auto;\r\n    flex-direction: column;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n`\r\n\r\n\r\nconst ContBar = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n`\r\n\r\nconst EndModalContainer = styled.div`\r\ndisplay: none;\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    height: 100%;\r\n    width: 100%;\r\n    justify-content: center;\r\n\talign-items: center;\r\n    background-color: #000000a6;\r\n\tz-index: 30;\r\n\ttransition-duration: .5s;\r\n`\r\nconst EndModal = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1 1 auto;\r\n\tmax-width: 900px;\r\n\tbackground: #20242d;\r\n\tposition: relative;\r\n\tpadding: 20px;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-radius: 10px;\r\n`\r\nexport default WrapperCont1; \r\n","import { $authhost, $host } from \"./index\";\r\n\r\nexport const httpGetDiscount = async (id) =>{\r\n    const {data} = await $authhost.get(`user/getLead/${id}`)\r\n    return data\r\n}\r\nexport const httpGetStat = async () =>{\r\n    const {data} = await $host.get(`st/`)\r\n    return data\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default function StatRow(props) {\r\n    \r\n    const stylelist = {\r\n        border: '0',\r\n        margin: '10px 0 0 0 ',\r\n    }\r\n\r\n  return (\r\n        <StatRowst style ={\r\n            props.start \r\n            ?\r\n            {cursor: 'pointer'}\r\n            :\r\n            {}\r\n        }>\r\n            <El>\r\n            {props.text}\r\n            </El>\r\n            {\r\n            !props.start \r\n            ?\r\n            <El>\r\n                {props.val||0}\r\n            </El>\r\n            :\r\n            ''\r\n        }\r\n            \r\n        </StatRowst> \r\n  )\r\n}\r\nconst StatRowst = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 50px;\r\n    min-width: 150px;\r\n    flex-direction: row;\r\n    border: 1px solid #f6a617;\r\n    transition-duration: .5s;\r\n`\r\nconst El = styled.div`\r\n    display: flex;\r\n    min-height: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 1 1 50%;\r\n`","import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { httpGetStat } from '../../http/game'\r\nimport StatRow from './Statrow'\r\n\r\nimport '../../App.css';\r\nimport '../../mobile.css';\r\n\r\nconst  WrapperCont2 = observer((props) => {\r\n    const [stat10001lvl, setstat10001lvl] = useState(0)\r\n    const [stat10002lvl, setstat10002lvl] = useState(0)\r\n    const [stat10003lvl, setstat10003lvl] = useState(0)\r\n    const [stat25001lvl, setstat25001lvl] = useState(0)\r\n    const [stat25002lvl, setstat25002lvl] = useState(0)\r\n    const [stat25003lvl, setstat25003lvl] = useState(0)\r\n    const [stat50001lvl, setstat50001lvl] = useState(0)\r\n    const [stat50002lvl, setstat50002lvl] = useState(0)\r\n    const [stat50003lvl, setstat50003lvl] = useState(0)\r\n    const [stat100001lvl, setstat100001lvl] = useState(0)\r\n    const [stat100002lvl, setstat100002lvl] = useState(0)\r\n    const [stat100003lvl, setstat100003lvl] = useState(0)\r\n    useEffect(() => {\r\n        httpGetStat().then(data => {\r\n            if(data[0]){\r\n                setstat10001lvl(data[0].room1lvl)\r\n                setstat10002lvl(data[0].room2lvl)\r\n                setstat10003lvl(data[0].room3lvl)\r\n            }           \r\n        })\r\n      }, []);\r\n  return (\r\n    <WrapperCont className='WrapperCont_stat' style={props.mystyle}>\r\n        <Cont className='stats_row_items'>\r\n                    <RowItem className='RowItem_stat'>\r\n                        <StatRow text='Обучение за 1000' start ={true}/>\r\n                        <StatRow text='1 уровень' val={stat10001lvl} />\r\n                        <StatRow text='2 уровень' val={stat10002lvl} />\r\n                        <StatRow text='3 уровень' val={stat10003lvl} />\r\n                    </RowItem>   \r\n                    <RowItem className='RowItem_stat'>\r\n                        <StatRow text='Обучение за 2500' start ={true} />\r\n                        <StatRow text='1 уровень' val={stat25001lvl} />\r\n                        <StatRow text='2 уровень' val={stat25002lvl} />\r\n                        <StatRow text='3 уровень' val={stat25003lvl} />\r\n                    </RowItem> \r\n                </Cont>\r\n                <Cont className='stats_row_items'>\r\n                    <RowItem className='RowItem_stat'>\r\n                        <StatRow text='Обучение за 5000' start ={true} />\r\n                        <StatRow text='1 уровень' val={stat50001lvl} />\r\n                        <StatRow text='2 уровень' val={stat50002lvl} />\r\n                        <StatRow text='3 уровень' val={stat50003lvl} />\r\n                    </RowItem>\r\n                    <RowItem className='RowItem_stat'>\r\n                        <StatRow text='Обучение за 10000' start ={true} />\r\n                        <StatRow text='1 уровень' val={stat100001lvl} />\r\n                        <StatRow text='2 уровень' val={stat100002lvl} />\r\n                        <StatRow text='3 уровень' val={stat100003lvl} />\r\n                    </RowItem>   \r\n                </Cont>\r\n    </WrapperCont>\r\n  )\r\n})\r\nconst WrapperCont = styled.div`\r\n    \r\n`\r\nconst Cont = styled.div`\r\n    \r\n`\r\nconst RowItem = styled.div`\r\n    \r\n`\r\n\r\n\r\nexport default WrapperCont2; \r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Context } from '../../index'\r\nimport { observer } from 'mobx-react-lite'\r\nimport WrapperCont1 from './WrapperCont1'\r\nimport WrapperCont2 from './WrapperCont2'\r\n\r\nconst Wrapper = observer(() => {\r\n  return (\r\n    <Wrapperr>\r\n        <ContentBody>\r\n            <WrapperCont1 />\r\n            <WrapperCont2 mystyle={{flex: '0 1 auto'}} />\r\n        </ContentBody>     \r\n    </Wrapperr>\r\n  )\r\n})\r\n\r\n\r\nconst Wrapperr = styled.div`\r\n    position: relative;\r\n    flex-wrap: wrap;\r\n  margin-top: 75px;\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    padding-top:10px;\r\n    width:100%;\r\n    flex-direction: column;\r\n    min-height: calc(100vh - 197px);\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-top: 0.5px solid #2d3340;\r\n`\r\nconst ContentBody = styled.div`\r\n    flex-direction: column;\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    max-width: 1200px;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n`\r\n\r\nexport default Wrapper\r\n","import React from 'react'\r\n//import styled from 'styled-components'\r\nimport Wrapper from '../components/wrapper/Wrapper';\r\n\r\nconst  Game = () => {\r\n  return (\r\n    <Wrapper />\r\n  )\r\n}\r\nexport default Game; \r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ROOMS_ROUTE } from '../../utils/const'\r\n\r\n\r\nconst  FirstStage = observer(() => {\r\n  return ( \r\n    <Info>\r\n        <Div>\r\n        <h3><span style={{color:'#f6a617'}}>•</span> Суть нашего обучения?<span style={{color:'#f6a617'}}>•</span></h3>\r\n\r\nСуть нашего обучения заключается в том, чтобы показать и рассказать, как работает накопительный счет в банках, наглядным и практичным способом. Мы хотим, чтобы вы не просто получили теоретические знания, но и сами увидели, как накопительный счет может помочь вам управлять своими сбережениями\r\n<br/><br/>\r\n<h3><span style={{color:'#f6a617'}}>•</span>Знания, которые вы получите:<span style={{color:'#f6a617'}}>•</span></h3>\r\n\r\n Застрахованы ли накопительные счета в банках?<br/>\r\n Как рассчитываются налоги с накопительного счета?<br/>\r\n Минимальные требования к остатку<br/>\r\n Комиссии за обслуживание<br/>\r\n Процентные ставки<br/>\r\n Способы внесения и снятия средств<br/>\r\n Доступ к средствам<br/>\r\n <br/><br/>\r\n<h3><span style={{color:'#f6a617'}}>•</span>В чем заключается суть наглядного обучения?<span style={{color:'#f6a617'}}>•</span></h3>\r\n\r\nНаглядное обучение заключается в предоставлении учащимся практического, интерактивного опыта, который помогает им лучше понять концепции и навыки. В нашем случае мы будем использовать примеры из реальной жизни и демонстрации, чтобы показать вам, как работает накопительный счет.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Как проходит обучение?</b>\r\n\r\nОбучение проходит в формате поэтапного группового обучения. Это означает, что мы собираем группу людей и проводим обучение поэтапно. Вы не перейдете на следующий этап, пока не будет заполнена вся группа. Такой подход позволяет нам уделить каждому участнику должное внимание и ответить на все имеющиеся вопросы.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Кому подходит это обучение?</b>\r\n\r\nЭто обучение подходит для всех, кто хочет узнать больше о накопительных счетах в банках, включая:\r\n<br/>\r\n Людей, которые хотят начать сберегать деньги\r\n Людей, которые хотят узнать больше о различных вариантах сбережений\r\n Людей, которые хотят узнать, как накопительный счет может помочь им достичь своих финансовых целей\r\n <br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Чего ожидать от обучения?</b>\r\nПо завершении обучения вы сможете:\r\n<br/>\r\n Понимать, как работает накопительный счет в банках\r\n Знать, как выбрать правильный накопительный счет для ваших нужд\r\n Уметь эффективно управлять своими сбережениями\r\n Чувствовать себя уверенно в использовании накопительного счета для достижения своих финансовых целей\r\n <br/>\r\nЕсли вы ищете наглядный и практичный способ узнать больше о накопительных счетах в банках, то наше обучение - это то, что вам нужно.\r\n<br/> <br/>\r\n<h3><span style={{color:'#f6a617'}}>•</span>Как работает накопительный счет<span style={{color:'#f6a617'}}>•</span></h3>\r\nРазные банки предлагают разные условия, такие как Процентная ставка, Длительность, Сумма,  показывают разнообразие доступных отечественным потребителям накопительных счетов. Другим важным выводом, который можно сделать из внимательного изучения банковских продуктов, становится отсутствие единого подхода к работе НС у различных финансовых организаций.\r\n\r\nОдни банки предлагают открыть счет без лимитов по сроку или сумме. Другие – напротив – стремятся несколько ограничить клиентов, но предлагают более высокую процентную ставку. Результатом становится возможность выбрать оптимальный вариант вложений имеющихся финансовых ресурсов с учетом персональных потребностей конкретного вкладчика.\r\n<br/>\r\n<br/>\r\n<h3><span style={{color:'#f6a617'}}>•</span>Подвох и преимущества накопительного счета.<span style={{color:'#f6a617'}}>•</span></h3>\r\n\r\nВ чем подвох и опасность счетов\r\nНакопительные счета имеют не только преимущества, но и ряд недостатков. Поэтому для эффективного использования первых и минимизации негатива от вторых требуется внимательно изучение существующих подводных камней, к числу которых относятся:\r\n<br/><br/>\r\n<ol style={{marginLeft: '15px'}}>\r\n  <li>Низкий процент. Обычно ставка по НС несколько ниже депозитов, что компенсируется возможностями снимать деньги или пополнять счет при необходимости.</li>\r\n  <li>Плавающая ставка. Некоторые банки устанавливают так называемый плавающий процент. Он зависит от суммы остатков на счете, что необходимо учитывать при выборе лучшего из доступных вариантов вложений.</li>\r\n  <li>Ориентация на российский рубль. Сегодня сложно найти на рынке предложения открыть НС в иностранной валюте, что снижает возможности по диверсификации вложений.</li>\r\n</ol>\r\n<br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Преимущества накопительных счетов</b>\r\nПопулярность НС как альтернативного варианта накопления и приумножения финансовых ресурсов объясняется несколькими важными плюсами банковского продукта. В их число входят:\r\n<br/>\r\n<ol style={{marginLeft: '15px'}}>\r\n  <li>Отсутствие или минимум ограничений по размеру остатка на счете.</li>\r\n  <li>Возможность как пополнить НС, так и снять с него деньги при необходимости.</li>\r\n  <li>Эффективная процентная ставка, более выгодная, чем для сберегательных счетов или вкладов до востребования.</li>\r\n  <li>Гибкость правил размещения денежных средств, позволяющая быстро реагировать на изменения банковского рынка.</li>\r\n</ol>\r\n<br/>\r\n</Div>\r\n<Link to={ROOMS_ROUTE}><SwimBut>НАЗАД</SwimBut></Link>\r\n    </Info>\r\n  )\r\n})\r\n\r\nconst Info = styled.div`\r\n    line-height: 22px;\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst SwimBut = styled.div`\r\nline-height: normal;\r\nbackground-color: #f6a617;\r\npadding: 5px;\r\nborder-radius: 50%;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 13pt;\r\ncursor: pointer;\r\ndisplay: flex;\r\nz-index: 2;\r\n`\r\nconst Div = styled.div`\r\ndisplay: flex;\r\n    flex-direction: column;\r\n    flex: 1 1 auto;\r\n`\r\nexport default FirstStage; \r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { COMMON_ROUTE } from '../../utils/const'\r\n\r\n\r\nconst  Market = observer(() => {\r\n  return ( \r\n    <Info>\r\n        <Div>\r\n        <h3><span style={{color:'#f6a617'}}>•</span>Основы маркетинга<span style={{color:'#f6a617'}}>•</span></h3>\r\nМаркетинг — это процесс создания, общения и обмена ценностью для клиентов с целью удовлетворения потребностей и получения прибыли. Это комплексный процесс, который включает в себя изучение потребностей клиентов, разработку продуктов или услуг, которые их удовлетворяют, и продвижение этих продуктов или услуг целевым образом.\r\n<br/><br/>\r\n<h3><span style={{color:'#f6a617'}}>•</span> Основные принципы маркетинга<span style={{color:'#f6a617'}}>•</span></h3>\r\n<b><span style={{color:'#f6a617'}}>•</span>Ориентация на клиента:</b>\r\nПонимание и удовлетворение потребностей и желаний клиентов.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Ценностное предложение: </b>\r\nПредоставление клиентам ценности, которая превышает стоимость.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Интеграция:</b>\r\nРассмотрение всех аспектов маркетинга-микс (продукт, цена, место, продвижение).\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Устойчивость:</b>\r\nОтветственное управление маркетинговыми практиками и минимизация воздействия на окружающую среду.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Измерение:</b>\r\nОтслеживание и оценка эффективности маркетинговых кампаний.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Продукт:</b>\r\nФизический или виртуальный товар или услуга, предлагаемая клиентам.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Цена:</b>\r\nСумма, которую клиенты платят за продукт или услугу.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Место:</b>\r\nКанал или средства, с помощью которых продукт или услуга доставляется клиентам.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Продвижение:</b>\r\nМетоды, используемые для информирования и убеждения клиентов приобрести продукт или услугу.\r\n<br/><br/>\r\n<h3><span style={{color:'#f6a617'}}>•</span> Процесс маркетинга<span style={{color:'#f6a617'}}>•</span></h3>\r\n<b><span style={{color:'#f6a617'}}>•</span>Анализ рынка:</b>\r\nИзучение рыночных тенденций, конкурентов и потребностей клиентов.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Сегментация рынка:</b>\r\nРазделение рынка на более мелкие группы на основе сходных характеристик.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Выявление целевой аудитории:</b>\r\nВыбор сегмента рынка, на который будет нацелена маркетинговая кампания.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Разработка маркетингового микса:</b>\r\nОпределение соответствующих стратегий для каждого элемента маркетингового микса.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Реализация маркетинговой кампании:</b>\r\nВыполнение разработанной маркетинговой стратегии.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Оценка результатов:</b>\r\nИзмерение эффективности маркетинговой кампании и внесение корректировок по мере необходимости.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Бросающийся текст.</b>\r\nЗаманивающий, грамотный и краткий текст это ключевая часть в маркетинге. Никто не захочет переходить на какой то проект, в котором будет плохо изложена мысль и текст с ошибками. Это самая ключевая часть по нашему субъективному мнению.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Вирусные видео.</b>\r\nВ видео обзоре или рекламном видео, должно нести собой: ,,почему должны выбрать именно вас?\" То есть ваши + среди конкурентов. На видео слова не должны звучать однотонно и фон не должен быть пустым, фот должен быть ярким, а слова звучать уверенно и выразительно.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Способы для раскрутки.</b>\r\nСпособов очень много и рассказывать про все не думаю что обязательно. Рекламировать продукт/проект/многое другое, вы можете везде, от рассказа друзьям до написания текста под тематические посты в комменты, загрузку фоток/видео/текста в форумы, тик ток, ютуб short и прочее\r\n<b><span style={{color:'#f6a617'}}>•</span>Шаблон текста.</b>\r\n<b><span style={{color:'#f6a617'}}>•</span>Перейти к своему пригласительному коду</b>\r\n<Link style={{color:'#f6a617'}} to={COMMON_ROUTE}><b>Перейти</b></Link>\r\n<b><span style={{color:'#f6a617'}}>•</span>Что вы получаете за приглашения людей на нашу платформу с обучением.</b>\r\nВы получаете слайды(внутриигровая валюта), которые потом можете обменять почти на все что угодно или перейти к обучению ,,процентного накопления\".\r\n        </Div>\r\n<br/>\r\n<br/>\r\n<Link onClick={() => {\r\n    window.history.back()\r\n}}><SwimBut>НАЗАД</SwimBut></Link>\r\n    </Info>\r\n  )\r\n})\r\n\r\nconst Info = styled.div`\r\n    line-height: 22px;\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst SwimBut = styled.div`\r\nline-height: normal;\r\nbackground-color: #f6a617;\r\npadding: 5px;\r\nborder-radius: 50%;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 13pt;\r\ncursor: pointer;\r\ndisplay: flex;\r\nz-index: 2;\r\n`\r\nconst Div = styled.div`\r\ndisplay: flex;\r\n    flex-direction: column;\r\n    flex: 1 1 auto;\r\n`\r\nexport default Market; \r\n\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ROOMS_ROUTE } from '../../utils/const'\r\n\r\n\r\nconst  SecondStage = observer(() => {\r\n  return ( \r\n    <Info>\r\n        <Div>\r\n<h3><span style={{color:'#f6a617'}}>•</span>Как пополнить накопительный счет<span style={{color:'#f6a617'}}>•</span></h3>\r\nВажным преимуществом НС выступает не только возможность, но и удобством пополнения. Сегодня владельцам накопительного счета доступны сразу три способа решения данной задачи:\r\n\r\n<ol style={{marginLeft: '15px'}}>\r\n  <li>В личном кабинете на сайте банка. Простой и быстрый вариант пополнения. Требует авторизации на сайте и указания реквизитов для перевода денежных средств.</li>\r\n  <li>В офисе банковской организации. Традиционный способ пополнить накопительный счет. Предусматривает внесение наличных в кассу банка или использование для этого банкомата.</li>\r\n  <li>В мобильном приложении. Не менее удобный способ решения задачи. Требует скачивания и установки приложения банка, что обычно делается бесплатно. Деньги зачисляются мгновенно, а современные инструменты шифрования надежно защищают деньги клиента.</li>\r\n</ol>\r\n<br/>  \r\n<h3><span style={{color:'#f6a617'}}>•</span>Как начисляются проценты на накопительный счет<span style={{color:'#f6a617'}}>•</span></h3>\r\nКлючевым отличием НС от прочих банковских продуктов становится начисление процентов по эффективной ставке. Она рассчитывается в зависимости от правил конкретного банка по одному из двух возможных способов. Для большей наглядности каждый целесообразно рассмотреть более детально.\r\n\r\nПроценты на среднемесячный остаток\r\nПервый вариант расчета предусматривает отсутствие изменений по величине остатка в течение месяца. То есть за указанный период времени не было ни пополнений, ни снятий. В этом случае на всю сумму начисляется повышенный процент.\r\n\r\nЕсли пополнения были, на их размер начисляется процент до востребования. Если были снятия, повышенная ставка используется на минимальный остаток. На остальную сумму начисляется процент до востребования.\r\n\r\nПроценты на минимальный остаток\r\nВторая схема расчета процентов напоминает первую. Но с небольшим уточнением. За основу для начисления повышенной ставки используется минимальная величина остатка в течение месяца. К остальной сумме по итогам отчетного периода используется процент до востребования.\r\n<br/><br/>\r\n<h3><span style={{color:'#f6a617'}}>•</span>Застрахованы ли накопительные счета в банках?<span style={{color:'#f6a617'}}>•</span></h3>\r\nНС входят в число банковских продуктов, которые подлежат обязательному страхованию. Максимальная сумма возмещения составляет 1,4 млн. руб. В этом смысле НС ничем не отличается от накопительного вклада или сберегательного счета.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Как рассчитываются налоги с накопительных счетов?</b>\r\nДействующее в России фискальное законодательство предусматривает взимание налога на проценты по вкладам или счетам, включая накопительные. Но рядовым клиентам банков беспокоиться на этот счет не стоит. Дело в том, что налогообложению подлежат только доходы, а не сама сумма на счете. Кроме того, не учитывают те доходы, которые не превышают ставку рефинансирования +5 пунктов к ней. То есть практически все накопительные счета.\r\n<br/><br/>\r\n<b>Можно ли снимать деньги с накопительного счета?</b>\r\nВозможность и правила снятия денег с открытого НС определяются банком. В подавляющем большинстве случаев такая опция предусмотрена договором, так как она входит в число характерных особенностей накопительного счета.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Как снять деньги с накопительного счета?</b>\r\nСнятие денежных средств происходит двумя способами. Первый – перевод на дебетовую карту, открытую клиентом в том же банке. Второй – получение наличных в кассе банковского учреждения.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Можно ли заработать на накопительном счете?</b>\r\nДа, причем сумму, вполне сопоставимую с обычным депозитом. Для этого необходимо по максимуму использовать преимущества и минимизировать неудобства банковского продукта.\r\n<br/><br/>\r\n<b>Можно ли пользоваться накопительным счетом без карты?</b>\r\nТакая возможность предусмотрена правилами большей части отечественных банков. Единственным недостатком такого варианта сотрудничества становится необходимость посещать банковский офис для снятия денежных средств с НС.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Сколько накопительных счетов можно открыть?</b>\r\nКоличество доступных для открытия НС определяется правилами банком. Например, Тинькофф ограничивает клиентов десятью подобными счетами. В любом случае перед началом сотрудничества имеет смысл уточнить этот вопрос у сотрудника конкретного финансового учреждения.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>\r\nКак закрыть накопительный счет?</b>\r\nДля этого необходимо заполнить и отправить в банк заявку – или онлайн, или в бумажном формате непосредственно в офисе. Точный порядок закрытия НС регламентируется правилами банковской организации.\r\n<br/><br/>\r\n<b><span style={{color:'#f6a617'}}>•</span>Зачем банку накопительные счета?</b>\r\nНС выступают еще одним способом привлечь денежные средства потенциальных клиентов. Каждый банк, особенно крупный, крайне заинтересован в этом способе получения финансовых ресурсов.\r\n        </Div>\r\n        \r\n<br/>\r\n<br/>\r\n<Link to={ROOMS_ROUTE}><SwimBut>НАЗАД</SwimBut></Link>\r\n    </Info>\r\n  )\r\n})\r\n\r\nconst Info = styled.div`\r\n    line-height: 22px;\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst SwimBut = styled.div`\r\nline-height: normal;\r\nbackground-color: #f6a617;\r\npadding: 5px;\r\nborder-radius: 50%;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 13pt;\r\ncursor: pointer;\r\ndisplay: flex;\r\nz-index: 2;\r\n`\r\nconst Div = styled.div`\r\ndisplay: flex;\r\n    flex-direction: column;\r\n    flex: 1 1 auto;\r\n`\r\nexport default SecondStage; \r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ROOMS_ROUTE } from '../../utils/const'\r\n\r\n\r\nconst  ThirdStage = observer(() => {\r\n  return ( \r\n    <Info>\r\n        <Div>\r\n        \r\n<h3><span style={{color:'#f6a617'}}>•</span>Вывод<span style={{color:'#f6a617'}}>•</span></h3>\r\n<ul style={{marginLeft: '15px'}}>\r\n  <li>Накопительный счет выступает сегодня реальной альтернативой банковскому вкладу.</li>\r\n  <li>Условия предоставления продукта определяются каждым банком самостоятельно.</li>\r\n  <li>В общем случае, основными особенностями НС выступают: отсутствие ограничение по сумме и срокам, эффективная процентная ставка и возможность как пополнить, так и снять деньги со счета.</li>\r\n</ul>\r\n<br/>\r\n<h3><span style={{color:'#f6a617'}}>•</span>Подведем итоги нашего обучения.<span style={{color:'#f6a617'}}>•</span></h3>\r\n\r\nВы получили понимание того, как работает накопительный счет, какие подводные камни и преимущества имеет накопитпльный счет, ответили на часто задаваемые вопросы по накопительному счету\r\n<br/>\r\n<br/>\r\n        </Div>\r\n<Link to={ROOMS_ROUTE}><SwimBut>НАЗАД</SwimBut></Link>\r\n    </Info>\r\n  )\r\n})\r\n\r\nconst Info = styled.div`\r\n    line-height: 22px;\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst SwimBut = styled.div`\r\nline-height: normal;\r\nbackground-color: #f6a617;\r\npadding: 5px;\r\nborder-radius: 50%;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 13pt;\r\ncursor: pointer;\r\ndisplay: flex;\r\nz-index: 2;\r\n`\r\nconst Div = styled.div`\r\ndisplay: flex;\r\n    flex-direction: column;\r\n    //flex: 1 1 auto;\r\n`\r\nexport default ThirdStage; \r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport FirstStage from '../components/learn/FirstStage'\r\nimport Market from '../components/learn/Market'\r\nimport SecondStage from '../components/learn/SecondStage'\r\nimport ThirdStage from '../components/learn/ThirdStage'\r\nimport { FIRSTSTAGE_ROUTE, SECONDSTAGE_ROUTE, THIRDSTAGE_ROUTE } from '../utils/const'\r\n\r\n\r\nconst  Learn = () => {\r\n  const location = useLocation()\r\n  const is1St = location.pathname === FIRSTSTAGE_ROUTE\r\n  const is2St = location.pathname === SECONDSTAGE_ROUTE\r\n  const is3St = location.pathname === THIRDSTAGE_ROUTE\r\n  return (\r\n    <Wrapperr>\r\n      <ContentBody>\r\n        <WrapSet>\r\n            <RowItem1>\r\n              {\r\n                is1St && <FirstStage />\r\n              }\r\n              {\r\n                is2St && <SecondStage />\r\n              }\r\n              {\r\n                is3St && <ThirdStage />\r\n              }\r\n              {\r\n               (!is1St & !is2St & !is3St) ? <Market />\r\n\t\t:\r\n\t\t''\r\n              }\r\n            </RowItem1>    \r\n        </WrapSet>\r\n      </ContentBody>\r\n    </Wrapperr>\r\n  )\r\n}\r\n\r\nconst Wrapperr = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  width:100%;\r\n  margin-top: 75px;\r\n  min-height: calc(100vh - 197px);\r\n  justify-content: center;\r\n  border-top: 0.5px solid #2d3340;\r\n`\r\nconst ContentBody = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  flex: 1 1 auto;\r\n  padding: 10px;\r\n`\r\nconst WrapSet = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    width: 100%;\r\n    min-height: 100px;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n    color: white;\r\n`\r\n\r\nconst RowItem1 = styled.div`\r\n    flex-direction: column;\r\n    flex: 1 1 auto;\r\n    padding: 10px;\r\n    justify-content: flex-start;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    background-color: #262b37;\r\n`\r\nconst Rew = styled.div`\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    border-bottom: 1px solid #414551;\r\n    max-height: 85px;\r\n`\r\n\r\n\r\nexport default Learn; \r\n","import { $host } from \"./index\";\r\n\r\nexport const httpGetProf = async (id) =>{\r\n    const {data} = await $host.get(`profile/${id}`)\r\n    return data\r\n}\r\n\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst  ProfInfo = observer(({profInfost}) => {\r\n  let path = process.env.REACT_APP_S3_IMG_URL + profInfost.avatar\r\n  let login = profInfost.login\r\n  const img = {\r\n    backgroundImage: `url(${path})`,\r\n  }\r\n  return ( \r\n    <Info className='profWind'>\r\n        <Cont>\r\n            <Ava style={img} />\r\n            <Log>\r\n                {login}\r\n            </Log>\r\n        </Cont>\r\n    </Info>\r\n  )\r\n})\r\n\r\nconst Info = styled.div`\r\n    flex: 1 1 20%;\r\n    padding: 20px 0;\r\n    margin: 0px;\r\n    border-radius: 0px;\r\n    padding: 10px 0;\r\n    display: flex;\r\n    height: 100%;\r\n    background-color: #262b37;\r\n    flex-direction: column;\r\n`\r\nconst Cont = styled.div`\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst Ava = styled.div`\r\n    border-radius: 10px;\r\n    height: 100px;\r\n    width: 100px;\r\n    background-size: no-repeat;\r\n    background-position: center;\r\n    background-size: cover;\r\n    margin-bottom: 10px;\r\n`\r\nconst Log = styled.div`\r\n\r\n`\r\nexport default ProfInfo; \r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport WrapperCont2 from '../components/wrapper/WrapperCont2';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\nimport { Context } from '..';\r\nimport { httpGetProf } from '../http/profile';\r\nimport ProfInfo from '../components/profile/ProfInfo';\r\n//import styled from 'styled-components'\r\n\r\nconst  Profile = observer(() => {\r\n  const [ allPopoln, setAllPopoln ] = useState(0)\r\n  const [ allVivod, setAllVivod ] = useState(0)\r\n\r\n  const {id} = useParams()\r\n  const { profInfost } = useContext(Context)\r\n    useEffect(() => {\r\n      httpGetProf(id).then(data => {\r\n        profInfost.setLogin(data.profile.login)\r\n        profInfost.setAvatar(data.profile.avatar)\r\n        setAllPopoln(data.historyPopoln)\r\n        setAllVivod(data.historyVivel)\r\n      })\r\n    }, [])\r\n    useEffect(() => {\r\n      httpGetProf(id).then(data => {\r\n        profInfost.setLogin(data.profile.login)\r\n        profInfost.setAvatar(data.profile.avatar)\r\n      })\r\n    }, [id])\r\n  return ( \r\n    <Wrapperr>\r\n      <ContentBody>\r\n        <WrapSet>\r\n              <RowItem1 className='style_col'>\r\n                <ProfInfo profInfost={profInfost}/>\r\n                <WorkZone className='profWind'>\r\n                  <WorkRow>\r\n                    <WRBlock>\r\n                        <label>\r\n                        Пополнил\r\n                        </label>\r\n                        <TextBl>\r\n                        {allPopoln ? allPopoln :'Операций не производилось'}\r\n                        </TextBl>\r\n                    </WRBlock>\r\n                    <WRBlock>\r\n                    <label>\r\n                          Обменял\r\n                        </label>\r\n                        <TextBl>\r\n                        {allVivod ? allVivod :'Операций не производилось'}\r\n                        </TextBl>\r\n                    </WRBlock>\r\n                  </WorkRow>\r\n                  <WorkRow>\r\n                  <WRBlock>\r\n                    <label>\r\n                          Статистика обучений\r\n                        </label>\r\n                        <TextBl>\r\n                        статистика недоступна во время бета теста\r\n                        </TextBl>\r\n                    </WRBlock>\r\n                  </WorkRow>\r\n                </WorkZone>\r\n              </RowItem1>    \r\n        </WrapSet>\r\n        <WrapperCont2 mystyle={{flex: '0 1 auto'}}/>\r\n      </ContentBody>\r\n    </Wrapperr>\r\n  )\r\n})\r\n\r\nconst Wrapperr = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  padding-top:10px;\r\n  width:100%;\r\n  margin-top: 75px;\r\n  min-height: calc(100vh - 197px);\r\n  justify-content: center;\r\n  border-top: 0.5px solid #2d3340;\r\n`\r\nconst ContentBody = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  flex: 1 1 auto;\r\n`\r\nconst WrapSet = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    width: 100%;\r\n    min-height: 100px;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n    color: white;\r\n`\r\n\r\nconst RowItem1 = styled.div`\r\n    flex: 1 1 auto;\r\n    padding: 10px;\r\n    align-items: center;\r\n    display: flex;\r\n    border-radius: 10px;\r\n`\r\n\r\nconst WorkZone = styled.div`\r\n  flex: 1 1 80%;\r\n  justify-content: space-around;\r\n  flex-direction:column;\r\n  background-color: #2e3442;\r\n  margin: 0px;\r\n  border-radius: 0px;\r\n  padding: 10px;\r\n    display: flex;\r\n    height: 100%;\r\n`\r\nconst WorkRow = styled.div`\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  min-height: 25px;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n`\r\nconst WRBlock = styled.div`\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  margin: 0 20px 10px 20px;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n`\r\nconst TextBl = styled.div`\r\n  color: #f6a617;\r\n  margin-top: 5px;\r\n`\r\nexport default Profile; \r\n","import React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Questions = () => {\r\n  const [hide, setHide] = useState(false);\r\n  const [highlightedSection, setHighlightedSection] = useState(null);\r\n  const containerRef = useRef(null);\r\n\r\n  const scrollToSection = (sectionId) => {\r\n    setHide(0)\r\n    const section = document.getElementById(sectionId);\r\n    if (section && containerRef.current) {\r\n      containerRef.current.scrollTo({\r\n        top: section.offsetTop,\r\n        behavior: 'smooth',\r\n      });\r\n\r\n      setHighlightedSection(sectionId);\r\n      setTimeout(() => {\r\n        setHighlightedSection(null);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapperr>\r\n      <ContentBody>\r\n        <WrapSet>\r\n          <RowItem1 ref={containerRef}>\r\n            <Section>\r\n              <h3\r\n              id='account'\r\n              className={highlightedSection === 'account' ? 'section highlight' : 'section'}>\r\n                <span style={{ color: '#f6a617' }}>•</span>Вопросы по аккаунту<span style={{ color: '#f6a617' }}>•</span>\r\n              </h3>\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Как зарегистрироваться:\r\n              </b>\r\n              <br />\r\n              1. Нажмите на кнопку \"Регистрация\" в правом верхнем углу главной страницы сайта.\r\n              <br />\r\n              2. Заполните регистрационную форму, указав имя пользователя, адрес электронной почты и пароль.\r\n              <br />\r\n              3. Проверьте правильность введенных данных и нажмите \"Зарегистрироваться\".\r\n              <br />\r\n              <br />\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Как восстановить пароль:\r\n              </b>\r\n              <br />\r\n              Восстановить пароль на сайте никак не выйдет так что запоминайте его.\r\n              <br />\r\n              <br />\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Какие правила поведения:\r\n              </b>\r\n              <br />\r\n              Ознакомьтесь с ними внимательно, чтобы избежать нарушений и последующей блокировки аккаунта.\r\n              <br />\r\n              <br />\r\n              Правила включают в себя:\r\n              <br />\r\n              * Не размещайте оскорбительный или спам-контент.\r\n              <br />\r\n              * Будьте вежливы и уважайте других участников сайта.\r\n              <br />\r\n              * Не нарушайте авторские права.\r\n              <br />\r\n              * Не используйте ненормативную лексику.\r\n              <br />\r\n              * Соответствуйте тематике сайта и размещайте релевантный контент.\r\n              <br />\r\n              <br />\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Как поменять аватар:\r\n              </b>\r\n              <br />\r\n              1. Перейдите в свой профиль.\r\n              <br />\r\n              2. Нажмите на свой аватар.\r\n              <br />\r\n              3. Выберите изображение с вашего устройства.\r\n              <br />\r\n              4. После предпросмотра подтвердите изменение.\r\n              <br />\r\n              <br />\r\n            </Section>\r\n            <Section>\r\n              <h3\r\n              id='techno'\r\n              className={highlightedSection === 'techno' ? 'section highlight' : 'section'}>\r\n                <span style={{ color: '#f6a617' }}>•</span>Технические проблемы сайта<span style={{ color: '#f6a617' }}>•</span>\r\n              </h3>\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Что делать, если программа не запускается?\r\n              </b>\r\n              <br />\r\n              Написать об этом в поддержку, поддержка поможет решить эту проблему.\r\n              <br />\r\n              <br />\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Как восстановить забытый пароль?\r\n              </b>\r\n              <br />\r\n              На нашем сайте пока нет возможности восстановления пароля, поэтому просим вас запомнить ваш пароль.\r\n              <br />\r\n              <br />\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Как связаться с технической поддержкой?\r\n              </b>\r\n              <br />\r\n              Снизу сайта есть кнопка \"задать другой вопрос\", перейдите по ней и задайте нам ваш вопрос.\r\n              <br />\r\n              <br />\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Как настроить учетную запись?\r\n              </b>\r\n              <br />\r\n              В правом верхнем углу есть кружок, нажмите на него и перейдите в настройки.\r\n              <br />\r\n              <br />\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Что делать при возникновении ошибки?\r\n              </b>\r\n              <br />\r\n              Написать об этом в поддержку, поддержка поможет решить эту проблему.\r\n              <br />\r\n              <br />\r\n            </Section>\r\n            <Section>\r\n              <h3 id='other' className={highlightedSection === 'other' ? 'section highlight' : 'section'}>\r\n                <span style={{ color: '#f6a617' }}>•</span>Другие вопросы<span style={{ color: '#f6a617' }}>•</span>\r\n              </h3>\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Можно ли использовать ваши материалы на своем сайте?\r\n              </b>\r\n              <br />\r\n              Вся информация на сайте защищена авторским правом и не может быть копирована или распространена без согласия владельца сайта.\r\n              <br />\r\n              <br />\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Можно ли рекламировать на вашем сайте?\r\n              </b>\r\n              <br />\r\n              Реклама сторонних сайтов и материалов на нашем сайте запрещена.\r\n              <br />\r\n              <br />\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Есть ли у вас рассылка новостей?\r\n              </b>\r\n              <br />\r\n              Для этого у нас есть телеграм-канал, в котором публикуются все нововведения и новости о проекте.\r\n              <br />\r\n              <br />\r\n              <b>\r\n                <span style={{ color: '#f6a617' }}>•</span>Как внести предложение по улучшению контента?\r\n              </b>\r\n              <br />\r\n              Снизу сайта есть кнопка \"сотрудничество\", нажмите на нее и дождитесь пока с вами свяжется администрация.\r\n              <br />\r\n              <br />\r\n            </Section>\r\n          </RowItem1>\r\n          <RowItem2 className='mobile_none'>\r\n            <RowItem2El1>\r\n              <ButA onClick={() => scrollToSection('account')}>\r\n                Вопросы по аккаунту\r\n              </ButA>\r\n              <ButA onClick={() => scrollToSection('techno')}>\r\n                Технические проблемы\r\n              </ButA>\r\n              <ButA onClick={() => scrollToSection('other')}>\r\n                Другие вопросы\r\n              </ButA>\r\n            </RowItem2El1>\r\n            \r\n          </RowItem2>\r\n          <SwimBut onClick={() => setHide(!hide)}>Вопросы</SwimBut>\r\n          <Menu className={`pc_none modal ${hide ? 'show' : 'hide'}`}>\r\n            <Cont>\r\n              <But onClick={() => scrollToSection('account')}>\r\n                Вопросы по аккаунту\r\n              </But>\r\n              <But onClick={() => scrollToSection('techno')}>\r\n                Технические проблемы\r\n              </But>\r\n              <But onClick={() => scrollToSection('other')}>\r\n                Другие вопросы\r\n              </But>\r\n            </Cont>\r\n          </Menu>\r\n        </WrapSet>\r\n      </ContentBody>\r\n    </Wrapperr>\r\n  );\r\n};\r\n\r\nconst But = styled.a`\r\n  flex-direction: row;\r\n  width: 80%;\r\n  position: relative;\r\n  margin: 5px 0;\r\n  display: flex;\r\n  min-height: 50px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  flex: 0 1 auto;\r\n  border-radius: 10px;\r\n  background-color: #f6a617;\r\n  cursor: pointer;\r\n  transition-duration: .5s;\r\n  font-size: 11pt;\r\n  color: white;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  width: 100vw;\r\n  z-index: 26;\r\n  background-color: #20242d;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst WrapBut = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background: #20242d;\r\n  align-items: center;\r\n`;\r\n\r\nconst Cont = styled.div`\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SwimBut = styled.div`\r\n  text-transform: uppercase;\r\n  padding: 1px;\r\n  right: 0px;\r\n  font-size: 10pt;\r\n  top: 40%;\r\n  display: none;\r\n  position: fixed;\r\n  width: 15px;\r\n  writing-mode: vertical-lr;\r\n  text-orientation: upright;\r\n  background-color: #f6a617;\r\n  user-select: none;\r\n  border-radius: 5px 0 0 5px;\r\n  z-index: 27;\r\n  @media screen and (max-width:720px){\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst ButA = styled.div`\r\n  flex-direction: row;\r\n  width: 90%;\r\n  position: relative;\r\n  margin: 5px 0;\r\n  display: flex;\r\n  min-height: 50px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  flex: 0 1 auto;\r\n  border-radius: 10px;\r\n  background-color: #f6a617;\r\n  cursor: pointer;\r\n  transition-duration: .5s;\r\n  font-size: 11pt;\r\n  color: white;\r\n`;\r\n\r\nconst RowItem2 = styled.div`\r\n  margin-left: 5px;\r\n  flex: 0 1 30%;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  display: flex;\r\n  border-radius: 10px;\r\n  background-color: #262b37;\r\n`;\r\n\r\nconst RowItem2El1 = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst RowItem2El2 = styled.div`\r\n  flex: 1 1 auto;\r\n  flex-direction: column;\r\n  display: flex;\r\n  justify-content: end;\r\n  align-items: center;\r\n`;\r\n\r\nconst Wrapperr = styled.div`\r\n  position: relative;\r\n  margin-top: 75px;\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  padding-top: 10px;\r\n  width: 100%;\r\n  height: calc(100vh - 197px);\r\n  justify-content: center;\r\n  border-top: 0.5px solid #2d3340;\r\n`;\r\n\r\nconst ContentBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  flex: 1 1 auto;\r\n  padding: 10px;\r\n`;\r\n\r\nconst WrapSet = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  width: 100%;\r\n  min-height: 100px;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n  color: white;\r\n`;\r\n\r\nconst RowItem1 = styled.div`\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n  padding: 10px;\r\n  overflow-y: scroll;\r\n  justify-content: flex-start;\r\n  display: flex;\r\n  border-radius: 10px;\r\n  background-color: #262b37;\r\n\r\n  .highlight {\r\n    animation: highlight-animation 2s;\r\n  }\r\n\r\n  @keyframes highlight-animation {\r\n    0% {\r\n      background-color: #f6a617;\r\n    }\r\n    100% {\r\n      background-color: #262b37;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Section = styled.div`\r\n  border-radius: 5px;\r\n  transition: background-color 0.5s;\r\n`;\r\n\r\nexport default Questions;\r\n","import { $host } from \"./index\";\r\n\r\nexport const httpGetRewiews = async (page, limit) =>{\r\n    const {data} = await $host.get(`rewiews?page=${page}&limit=${limit}`, )\r\n    return data\r\n}\r\nexport const httpPostRewiew = async (postus) =>{\r\n    try{\r\n        const {data} = await $host.post(`rewiews`, postus)\r\n        return data\r\n    }\r\n    catch (e) {\r\n        const mas = e.response.data.message\r\n        return mas\r\n    }\r\n    \r\n}\r\n\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Context } from '../..'\r\nimport { httpPostRewiewDel } from '../../http/admin'\r\nimport { httpGetRewiews } from '../../http/rewiews'\r\nimport { PROFILE_ROUTE } from '../../utils/const'\r\n\r\n\r\nconst  ReviewsText = ({id, rewiew}) => {\r\n  const {rewiews} = useContext(Context)\r\n  \r\n  const { user } = useContext(Context)\r\n  const path = process.env.REACT_APP_S3_IMG_URL + rewiew.avatar\r\n  let ws;\r\n  const DelRew = async () => {\r\n    let data;\r\n    const formData = new FormData()\r\n    formData.append('id', rewiew.id)\r\n    data = await httpPostRewiewDel(formData)\r\n    ws = new WebSocket('wss://moneyslide.ru/api:5000');\r\n    ws.onopen = function () {\r\n      ws.send(JSON.stringify({ text: 'Я ТУТААА' }));\r\n    };\r\n    httpGetRewiews(rewiews.page, rewiews.limit).then(data => {\r\n      rewiews.setRewiews(data.rows)\r\n      rewiews.setTotalCount(data.count)\r\n    })\r\n  }\r\n  \r\n  const stylelist = {\r\n    width:50,\r\n    height:50,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    backgroundImage: `url(${path})`,\r\n    borderRadius: '50%',\r\n}\r\n\r\n  return ( \r\n    <Cont>\r\n      \r\n      <RewImg>\r\n        <Link style={{color:'white'}} to={PROFILE_ROUTE+'/'+rewiew.usId}>\r\n          <div style={stylelist} alt=\"пользователь монислайд\"></div>\r\n        </Link>\r\n      </RewImg>\r\n      <NameText>\r\n        <Link style={{color:'white'}} to={PROFILE_ROUTE+'/'+rewiew.usId}>\r\n          <span> \r\n            {rewiew.login}\r\n          </span>\r\n        </Link>\r\n        <Text>\r\n          {rewiew.text}\r\n        </Text>\r\n      </NameText>\r\n      {user.User.role === 'ADMIN'\r\n        ?\r\n        <AdmDel className='admdel' onClick={DelRew}>Удалить</AdmDel>\r\n        :\r\n        ''\r\n      }\r\n    </Cont>\r\n  )\r\n}\r\n\r\nconst Cont = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n    width: 100%;\r\n    flex: 0 1 auto;\r\n    margin: 10px 0;\r\n`\r\nconst AdmDel = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 10px;\r\n  transform: translateY(-50%);\r\n  display: flex;\r\n  padding: 10px;\r\n  border: 1px solid red;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  transition-duration: .3s;\r\n`\r\nconst RewImg = styled.span`\r\n    padding: 5px;\r\n`\r\nconst Text = styled.span`\r\n    word-break: break-all;\r\n`\r\nconst NameText = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    margin-left: 10px;\r\n`\r\nexport default ReviewsText; \r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Context } from '../..'\r\n\r\n\r\nconst  Pages = observer(() => {\r\n\r\n    const {rewiews} = useContext(Context)\r\n    const pageCount = Math.ceil(rewiews.totalCount / rewiews.limit)\r\n    const pages = []\r\n    let activeSt ={\r\n        color: '#f6a617',\r\n        border: '1px solid #f6a617',\r\n    }\r\n    for (let i = 0; i < pageCount; i++) {\r\n        pages.push(i + 1)\r\n    }  \r\n  return ( \r\n    <Pagination>\r\n        {pages.map(page =>\r\n                <PaginationEl\r\n                    key={page}\r\n                    style={rewiews.page === page ? activeSt : {}}\r\n                    onClick={() => rewiews.setPage(page)}\r\n                >\r\n                    {page}\r\n                </PaginationEl>\r\n            )}\r\n    </Pagination>\r\n  )\r\n})\r\n\r\nconst Pagination = styled.div`\r\n    display: flex;\r\n    flex: 0 1 auto;\r\n    flex-wrap: wrap;\r\n    margin: 10px 10px 0 10px;\r\n    max-height: 60px;\r\n    cursor:pointer;\r\n    align-self:center;\r\n`\r\n//background: #f6a617;\r\nconst PaginationEl = styled.div`\r\n    min-height: 20px;\r\n    padding: 5px;\r\n    min-width: 20px;\r\n    margin: 5px;\r\n    display: flex;\r\n    border: 1px solid grey;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 2px;\r\n`\r\nexport default Pages; \r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport ReviewsText from '../components/reviews/ReviewsText';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { httpGetRewiews, httpPostRewiew } from '../http/rewiews'\r\nimport { Context } from '..';\r\nimport Pages from '../components/reviews/Pages';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { REGISTRATION_ROUTE } from '../utils/const';\r\nimport SwimMes from '../components/SwimMes';\r\n\r\n\r\nconst  Reviews = observer(() => {\r\n  const [popups, setPopups] = useState([]);\r\n  let ws;\r\n  useEffect(() => {\r\n    ws = new WebSocket('wss://moneyslide.ru/api:5000');\r\n\r\n    ws.onopen = function () {\r\n      \r\n    };\r\n\r\n    ws.onmessage = function (event) {\r\n      httpGetRewiews(rewiews.page, rewiews.limit).then(data => {\r\n        rewiews.setRewiews(data.rows)\r\n        rewiews.setTotalCount(data.count)\r\n      })\r\n    };\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, []);\r\n  const [textForm,setTextForm] = useState('')\r\n  const {user} = useContext(Context)\r\n  const {rewiews} = useContext(Context)\r\n  const navigate  = useNavigate()\r\n\r\n    useEffect(() => {\r\n      httpGetRewiews(rewiews.page, rewiews.limit).then(data => {\r\n        rewiews.setRewiews(data.rows)\r\n        rewiews.setTotalCount(data.count)\r\n      }) \r\n  }, [rewiews.page])\r\n\r\n  const postRewiew = async () => {\r\n    let mes;\r\n    let data;\r\n    const formData = new FormData()\r\n    formData.append('id', user.User.id)\r\n    formData.append('login', user.User.login)\r\n    formData.append('text', textForm)\r\n    formData.append('avatar', user.User.avatar)\r\n    formData.append('page', rewiews.page)\r\n    data = await httpPostRewiew(formData)\r\n    setTextForm('')\r\n    ws = new WebSocket('wss://moneyslide.ru/api:5000');\r\n    ws.onopen = function () {\r\n      ws.send(JSON.stringify({ text: 'Я ТУТААА' }));\r\n    };\r\n    ws.onmessage = function (event) {\r\n      httpGetRewiews(rewiews.page, rewiews.limit).then(data => {\r\n        rewiews.setRewiews(data.rows)\r\n        rewiews.setTotalCount(data.count)\r\n      })\r\n    };\r\n    if(data === 'Вы уже добавили отзыв' || data === 'Отзыв больше 200 символов' || data === 'Отзыв меньше 10 символов'){\r\n      mes = data\r\n      const newPopup = { id: Date.now(), mes }\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n        return(0)\r\n    }\r\n    \r\n    httpGetRewiews(rewiews.page, rewiews.limit).then(data => {\r\n      rewiews.setRewiews(data.rows)\r\n      rewiews.setTotalCount(data.count)\r\n    })\r\n    mes = 'Ваш отзыв был сохранен'\r\n      const newPopup = { id: Date.now(), mes }\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n        return(0)\r\n}\r\nconst goReg = () => {\r\n  navigate(REGISTRATION_ROUTE)\r\n}\r\n  return ( \r\n    <Wrapperr>\r\n      {popups.map(popup => (\r\n        <SwimMes key={popup.id} text={popup.mes} />\r\n      ))}\r\n      <ContentBody>\r\n        <WrapSet>\r\n              <RowItem1>\r\n                <div style={{alignSelf:'center'}}>Отзывы</div>\r\n                    <RewCont>\r\n                    {rewiews.rewiews.map(rewiew =>\r\n                    <Rew>\r\n                      <ReviewsText key={rewiew.id} rewiew={rewiew}/>\r\n                    </Rew>\r\n                    )} \r\n                    </RewCont>\r\n                    <Pages/>\r\n                    <SendRew>\r\n                        <ContRew>\r\n                        <RewInput \r\n                          placeholder='Введите текст отзыва(10 - 200 символов)'\r\n                          value={textForm}\r\n                          onChange={e => setTextForm(e.target.value)}\r\n                        />\r\n                      <RewBut\r\n                      className='SetBut'\r\n                      onClick={user.isAuth ? postRewiew : goReg}>\r\n                        {user.isAuth ? 'Отправить отзыв' : 'Зарегистрируйтесь чтобы оставить отзыв'}\r\n                      </RewBut>\r\n                        </ContRew>\r\n                    </SendRew>\r\n                </RowItem1>    \r\n        </WrapSet>\r\n        \r\n      </ContentBody>\r\n    </Wrapperr>\r\n  )\r\n})\r\n\r\nconst Wrapperr = styled.div`\r\n  position: relative;\r\n  margin-top: 75px;\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  padding-top:10px;\r\n  width:100%;\r\n  min-height: calc(100vh - 197px);\r\n  justify-content: center;\r\n  border-top: 0.5px solid #2d3340;\r\n`\r\nconst ContentBody = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  flex: 1 1 auto;\r\n  padding: 0 10px 10px 10px;\r\n`\r\nconst WrapSet = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    width: 100%;\r\n    min-height: 100px;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n    color: white;\r\n`\r\n\r\nconst RowItem1 = styled.div`\r\n    flex-direction: column;\r\n    flex: 1 1 auto;\r\n    padding: 10px;\r\n    justify-content: flex-start;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    background-color: #262b37;\r\n`\r\nconst Rew = styled.div`\r\n    flex: 0 1 auto;\r\n    display: flex;\r\n    border-bottom: 1px solid #414551;\r\n`\r\nconst RewCont = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n  max-width: 1200px;\r\n`\r\nconst SendRew = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n    width:100%;\r\n    justify-content:center;\r\n`\r\nconst ContRew = styled.div`\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    max-width: 400px;\r\n    flex-wrap: wrap;\r\n    justify-content:center;\r\n`\r\nconst RewInput = styled.input`\r\n    background-color: #414551;\r\n    margin: 10px 0;\r\n    padding: 20px;\r\n    color: white;\r\n    border: unset;\r\n    border-radius: 10px;\r\n    width:100%;\r\n    outline: none;\r\n`\r\nconst RewBut = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background: none;\r\n  cursor: pointer;\r\n  transition: all 0.7s;\r\n  color:white;\r\n  font-size: 12pt;\r\n  border-radius: 10px;\r\n  border: 1px solid #f6a617;\r\n  cursor: pointer;\r\n`\r\n\r\nexport default Reviews; \r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nexport default function RoomButtons(props) {\r\n    const styleLink = {\r\n        backgroundColor: '#f6a617'\r\n    }\r\n  return (\r\n    <WrapButtonst>\r\n        <Link\r\n        to={\r\n            props.act\r\n            ?\r\n            props.to\r\n            :\r\n            ''\r\n        }\r\n        className={\r\n            props.act\r\n            ?\r\n            'RoomBut activeBut'\r\n            :\r\n            'RoomBut'\r\n        }\r\n        style={\r\n            props.act\r\n            ?\r\n            styleLink\r\n            :\r\n            {}\r\n        }\r\n        >\r\n            {props.text}\r\n        </Link>\r\n    </WrapButtonst>\r\n        \r\n        \r\n  )\r\n}\r\nconst WrapButtonst = styled.div`\r\n    transition-duration: .5s;\r\n    padding: 0;\r\n    width: 90%;\r\n    position: relative;\r\n    border-radius: 10px;\r\n    display: flex;\r\n`\r\n\r\nconst Buttonst = styled.div`\r\n    flex-direction: row;\r\n    width: 90%;\r\n    position: relative;\r\n    margin: 10px;\r\n    display: flex;\r\n    min-height: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    flex: 1 1 auto;\r\n    border-radius: 10px;\r\n    background-color: #f6a617;\r\n    cursor: pointer;\r\n    transition-duration: .5s;\r\n    font-size: 11pt;\r\n    color: white;\r\n`","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Context } from '../..'\r\n\r\nconst  Firstlvl = observer((props) => {\r\n    const { user } = useContext(Context)\r\n    const { extendedArray } = props\r\n  return (\r\n        <Row>\r\n            {extendedArray.map((item, index) => (\r\n                <div key={index} className=''>\r\n                    {item.avatar && (item.id && (item.id == user.User.id && <div className='testAvatar1 sircle_start_level' style={{backgroundImage: `url(${process.env.REACT_APP_S3_IMG_URL + item.avatar})`, border: '1px solid red'}}></div>))}\r\n                    {item.avatar && (item.id && (item.id != user.User.id && <div className='testAvatar1 sircle_start_level' style={{backgroundImage: `url(${process.env.REACT_APP_S3_IMG_URL + item.avatar})`}}></div>))}\r\n                    {!item.avatar && <div className='testAvatar1 sircle_start_level'></div>}\r\n                </div>\r\n            ))} \r\n        </Row>\r\n  )\r\n})\r\n\r\nconst Row = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 90%;\r\njustify-content: space-around;\r\nalign-items: center;\r\npadding: 10px;\r\n`\r\nconst Сell = styled.div`\r\n\r\n`\r\n\r\nexport default Firstlvl; \r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Context } from '../..'\r\n\r\nconst  Secondlvl = observer((props) => {\r\n    const { user } = useContext(Context)\r\n    const { extendedArray } = props\r\n  return (\r\n        <Row>\r\n            {extendedArray.map((item, index) => (\r\n                <div key={index} className=''>\r\n                    {item.avatar && (item.id && (item.id == user.User.id && <div className='testAvatar2 sircle_middle_level' style={{backgroundImage: `url(${process.env.REACT_APP_S3_IMG_URL + item.avatar})`, border: '1px solid red'}}></div>))}\r\n                    {item.avatar && (item.id && (item.id != user.User.id && <div className='testAvatar2 sircle_middle_level' style={{backgroundImage: `url(${process.env.REACT_APP_S3_IMG_URL + item.avatar})`}}></div>))}\r\n                    {!item.avatar && <div className='testAvatar2 sircle_middle_level'></div>}\r\n                </div>\r\n            ))} \r\n        </Row>\r\n  )\r\n})\r\n\r\nconst Row = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 90%;\r\njustify-content: space-around;\r\nalign-items: center;\r\npadding: 10px;\r\n`\r\nconst Сell = styled.div`\r\n\r\n`\r\n\r\nexport default Secondlvl; \r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Context } from '../..'\r\n\r\nconst  Thirdlvl = observer((props) => {\r\n    const { user } = useContext(Context)\r\n    const { extendedArray } = props\r\n  return (\r\n        <Row>\r\n            {extendedArray.map((item, index) => (\r\n                <div key={index} className=''>\r\n                    {item.avatar && (item.id && (item.id == user.User.id && <div className='testAvatar3 sircle_final_level' style={{backgroundImage: `url(${process.env.REACT_APP_S3_IMG_URL + item.avatar})`, border: '1px solid red'}}></div>))}\r\n                    {item.avatar && (item.id && (item.id != user.User.id && <div className='testAvatar3 sircle_final_level' style={{backgroundImage: `url(${process.env.REACT_APP_S3_IMG_URL + item.avatar})`}}></div>))}\r\n                    {!item.avatar && <div className='testAvatar3 sircle_final_level'></div>}\r\n                </div>\r\n            ))} \r\n        </Row>\r\n  )\r\n})\r\n\r\nconst Row = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 90%;\r\njustify-content: space-around;\r\nalign-items: center;\r\npadding: 10px;\r\n`\r\n\r\nexport default Thirdlvl; \r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { observer } from 'mobx-react-lite'\r\nimport Firstlvl from './Firstlvl'\r\nimport Secondlvl from './Secondlvl'\r\nimport { Context } from '../..'\r\nimport Thirdlvl from './Thirdlvl'\r\n\r\nconst  ViewRoom = observer(() => {\r\n    const { room } = useContext(Context) \r\n    let mas1 = room.MyRoom.firLvl\r\n    const extendedArray1 = [...mas1];\r\n    while (extendedArray1.length < 16) {\r\n        extendedArray1.push({});\r\n    }\r\n    let mas2 = room.MyRoom.seclvl\r\n    const extendedArray2 = [...mas2];\r\n    while (extendedArray2.length < 16) {\r\n        extendedArray2.push({});\r\n    }\r\n    let mas3 = room.MyRoom.thirlvl\r\n    const extendedArray3 = [...mas3];\r\n    while (extendedArray3.length < 1) {\r\n        extendedArray3.push({});\r\n    }\r\n  return (\r\n        <StatRowst>\r\n            <Swim1>Обучение за {room.MyRoom.price}</Swim1>\r\n            <Swim2>заполнена на {(room.MyRoom.firLvl).length}/16</Swim2>\r\n            <Col>\r\n                <MinCol>\r\n                    <Firstlvl stolb={2} extendedArray = {extendedArray1.slice(0,4)}/>\r\n                </MinCol>\r\n                <MinCol>\r\n                    <Firstlvl stolb={2} extendedArray = {extendedArray1.slice(4,8)}/>\r\n                </MinCol>\r\n            </Col>             \r\n            <Secondlvl className='WrapColElem' extendedArray = {extendedArray2.slice(0,2)} />\r\n            <Thirdlvl className='WrapColElem' extendedArray = {extendedArray3.slice(0,1)} />\r\n            <Secondlvl className='WrapColElem' extendedArray = {extendedArray2.slice(2,4)} />\r\n            <Col>\r\n                <MinCol>\r\n                    <Firstlvl stolb={2} extendedArray = {extendedArray1.slice(8,12)}/>\r\n                </MinCol>\r\n                <MinCol>\r\n                    <Firstlvl stolb={2} extendedArray = {extendedArray1.slice(12,16)}/>\r\n                </MinCol>\r\n            </Col>\r\n        </StatRowst> \r\n  )\r\n})\r\nconst StatRowst = styled.div`\r\ndisplay: flex;\r\npadding: 5px;\r\njustify-content: space-around;\r\nalign-items: center;\r\nflex: 1 1 auto;\r\nmax-width: 1200px;\r\n`\r\nconst El = styled.div`\r\n    display: flex;\r\n    min-height: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 1 1 50%;\r\n`\r\nconst Col = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 90%;\r\njustify-content: space-around;\r\nalign-items: center;\r\npadding: 10px;\r\n`\r\nconst MinCol = styled.div`\r\nmargin: 10px 0;\r\ndisplay: flex;\r\nflex-direction: column;\r\nflex: 1 1 auto;\r\njustify-content: space-around;\r\n`\r\nconst Swim1 = styled.div`\r\n    position:absolute;\r\n    left: 15px;\r\n    top: 15px;\r\n`\r\nconst Swim2 = styled.div`\r\n    position:absolute;\r\n    right: 15px;\r\n    bottom: 15px;\r\n`\r\nexport default ViewRoom; \r\n","import { observer } from 'mobx-react-lite'\r\nimport styled from 'styled-components'\r\nimport { Context } from '../..'\r\nimport { useContext } from 'react'\r\nimport { FIRSTSTAGE_ROUTE, SECONDSTAGE_ROUTE, THIRDSTAGE_ROUTE } from '../../utils/const'\r\nimport RoomButtons from './RoomButtons'\r\nimport ViewRoom from './ViewRoom'\r\n\r\nconst  WrapperContRoom = observer(() => {\r\n    const { user } = useContext(Context)\r\n    \r\n  return (\r\n    <WrapperrCont>\r\n        <TestEl>\r\n            <RowItem1>\r\n                  <ViewRoom />\r\n            </RowItem1>    \r\n            <RowItem2>\r\n                <RowItem2El1>\r\n                    <RoomButtons to={FIRSTSTAGE_ROUTE} row = {1} text='Первый этап обучения' val={1} act={\r\n                        user.User.roomlvl >= 1\r\n                        ?\r\n                        1\r\n                        :\r\n                        0\r\n                    }/>\r\n                </RowItem2El1>\r\n                <RowItem2El1>\r\n                    <RoomButtons to={SECONDSTAGE_ROUTE} row = {1} text='Второй этап обучения' val={3} act={\r\n                        user.User.roomlvl >= 2\r\n                        ?\r\n                        1\r\n                        :\r\n                        0\r\n                    }/>\r\n                </RowItem2El1>\r\n                <RowItem2El1>\r\n                    <RoomButtons to={THIRDSTAGE_ROUTE} row = {1} text='Третий этап обучения' val={5} act={\r\n                        user.User.roomlvl >= 3\r\n                        ?\r\n                        1\r\n                        :\r\n                        0\r\n                    }/>\r\n                </RowItem2El1>\r\n            </RowItem2> \r\n        </TestEl>\r\n    </WrapperrCont>\r\n  )\r\n})\r\nconst TestEl = styled.div`\r\n    flex: 1 1 auto;\r\n    padding: 10px;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    flex-direction: column;\r\n`\r\n\r\n\r\nconst WrapperrCont = styled.div`\r\nposition: relative;\r\ndisplay: flex;\r\nflex: 1 1 auto;\r\nwidth: 100%;\r\nmin-height: 100px;\r\njustify-content: center;\r\nborder-radius: 10px;\r\ncolor: white;\r\n`\r\n\r\nconst RowItem1 = styled.div`\r\nposition:relative;\r\n    flex-direction: column;\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    width:100%;\r\n    max-width: 1200px;\r\n    border-radius: 10px;\r\n    background-color: #262b37;\r\n`\r\n\r\nconst RowItem2 = styled.div`\r\n    margin: 10px 0 0 0;\r\n    flex: 0 1 auto;\r\n    width:100%;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    justify-content: space-around;\r\n    background-color: #262b37;\r\n    max-width: 1200px;\r\n`\r\nconst RowItem2El1 = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex: 1 1 auto;\r\n    flex-direction: column;\r\n`\r\nconst RowItem2El2 = styled.div`\r\n    flex: 1 1 auto;\r\n    flex-direction: column;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n`\r\n\r\nconst TextWrap = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n`\r\n\r\nexport default WrapperContRoom; \r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Context } from '..'\r\nimport { httpGetMyRooms } from '../http/rooms'\r\nimport styled from 'styled-components'\r\nimport WrapperContRoom from '../components/room/WrapperContRoom'\r\nimport WrapperCont2 from '../components/wrapper/WrapperCont2'\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport TextAnimation from '../components/TextAnimations'\r\n\r\n//import styled from 'styled-components'\r\n\r\nconst  Rooms = observer(() => {\r\n  const {user} = useContext(Context);\r\n  const { room } = useContext(Context)\r\n  const [loading,setLoading] = useState(true)\r\n  const style = {\r\n    position: 'relative',\r\n    flexWrap: 'wrap',\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    paddingTop:'10px',\r\n    width:'100%',\r\n    flexDirection: 'column',\r\n    minHeight: 'calc(100vh - 197px)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderTop: '0.5px solid #2d3340',\r\n  }\r\n    \r\n  \r\n  useEffect(() => {\r\n    httpGetMyRooms(user.User.id, user.User.price).then(data => {\r\n      room.setMyRoom(data)\r\n    }).finally(() => {setLoading(false)})\r\n  }, []);\r\n  useEffect(() => {\r\n    httpGetMyRooms(user.User.id, user.User.price).then(data => {\r\n      room.setMyRoom(data);\r\n    }).finally(() => {setLoading(false)})\r\n  }, [user.User.price]);\r\n    if (loading){\r\n      return(\r\n        <Spinner style={style} animation=\"border\" role=\"status\"><TextAnimation/></Spinner>\r\n      )\r\n    }\r\n  \r\n  return (\r\n    <Wrapperr>\r\n        <ContentBody>\r\n            <WrapperContRoom/>\r\n            <WrapperCont2  mystyle={{flex: '0 1 auto'}}/>\r\n        </ContentBody>     \r\n    </Wrapperr>\r\n  )\r\n})\r\nconst Wrapperr = styled.div`\r\nposition: relative;\r\ndisplay: flex;\r\n  margin-top: 75px;\r\nflex: 1 1 auto;\r\n\r\nwidth: 100%;\r\nmin-height: calc(100vh - 197px);\r\njustify-content: center;\r\nborder-top: 0.5px solid #2d3340;\r\n`\r\nconst ContentBody = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmax-width: 1200px;\r\nflex: 1 1 auto;\r\n`\r\n\r\nexport default Rooms; \r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport SwimMes from '../SwimMes'\r\n\r\n const WorkRow = (props) => {\r\n    const [popups, setPopups] = useState([]);\r\n    const handleCopyClick = () => {\r\n        const textArea = document.createElement(\"textarea\");\r\n        textArea.value = props.myref;\r\n\ttextArea.style.position = 'fixed';\r\n        textArea.style.top = '0';\r\n        textArea.style.left = '0';\r\n        textArea.style.width = '2em';\r\n        textArea.style.height = '2em';\r\n        textArea.style.padding = '0';\r\n        textArea.style.border = 'none';\r\n        textArea.style.outline = 'none';\r\n        textArea.style.boxShadow = 'none';\r\n        textArea.style.background = 'transparent';\r\n        document.body.appendChild(textArea);\r\n        textArea.focus();\r\n        textArea.select();\r\n        try {\r\n            document.execCommand('copy');\r\n            const data = 'Код скопирован успешно'\r\n            const newPopup = { id: Date.now(), data };\r\n            setPopups(prevPopups => [...prevPopups, newPopup]);\r\n    \r\n            // Удаляем всплывающее окно через 5 секунд\r\n            setTimeout(() => {\r\n            setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n            }, 5000);\r\n        } catch (err) {\r\n            const data = 'Ошибка! Код не был скопирован'\r\n            const newPopup = { id: Date.now(), data };\r\n            setPopups(prevPopups => [...prevPopups, newPopup]);\r\n    \r\n            // Удаляем всплывающее окно через 5 секунд\r\n            setTimeout(() => {\r\n            setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n            }, 5000);\r\n        }\r\n        document.body.removeChild(textArea);\r\n      };\r\n     const style = {\r\n        minHeight: 'unset',\r\n        padding: 0,\r\n        maxWidth: 'calc(100% - 120px)',\r\n    }\r\n  return (\r\n        <Wrap>\r\n            <Cont>\r\n                <Label>{props.labelValue}</Label>\r\n                 {\r\n\r\n                        props.labelValue == 'Ваш пригласительный код' ?\r\n                        <ContRef>\r\n                            <InpRow style={style}  onChange={props.func} value={props.val} placeholder={props.inputPlaceholder} />\r\n                            <Copy onClick={handleCopyClick}>\r\n                                скопировать\r\n                            </Copy>\r\n                        </ContRef>\r\n                         :\r\n                        <InpRow onChange={props.func} value={props.val} placeholder={props.inputPlaceholder} /> \r\n                 }\r\n            </Cont>\r\n            {\r\n                    props.doubleRow?\r\n                    <Cont>\r\n                        <Label>{props.labelValue1}</Label>\r\n                        <InpRow onChange={props.func1} value={props.val1} placeholder={props.inputPlaceholder1} />\r\n                    </Cont>\r\n                    :\r\n                    ''\r\n                }\r\n                {popups.map(popup => (\r\n        <SwimMes key={popup.id} text={popup.data} />\r\n      ))}\r\n        </Wrap>\r\n  )\r\n}\r\n\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    flex: 0 1 auto;\r\n    min-height: 25px;\r\n    justify-content: space-around;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n`\r\nconst Cont = styled.div`\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    margin: 0 20px 10px 20px;\r\n    flex-direction: column;\r\n`\r\nconst Label = styled.label`\r\n    margin-bottom: 10px;\r\n`\r\nconst InpRow = styled.input`\r\n    margin: 0;\r\n    background-color: #262b37;\r\n    min-height: 20px;\r\n    padding: 10px;\r\n    background: #262b37;\r\n    color: white;\r\n    border: unset;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    max-height:40px;\r\n    flex: 1 1 auto;\r\n`\r\nconst ContRef = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n    margin: 0;\r\n    background-color: #262b37;\r\n    min-height: 20px;\r\n    padding: 10px;\r\n    background: #262b37;\r\n    color: white;\r\n    border: unset;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    max-height: 40px;\r\n    flex: 1 1 auto;\r\n    align-items: center;\r\n`\r\nconst Copy = styled.div`\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n    position: absolute;\r\n    padding: 5px;\r\n    right: 10px;\r\n    min-width: 70px;\r\n    background: #f6a617;\r\n    color: white;\r\n    font-size: 16px;\r\n`\r\nconst DivInpRow = styled.div`\r\n    margin: 0;\r\n    background-color: #262b37;\r\n    min-height: 20px;\r\n    padding: 10px;\r\n    background: #262b37;\r\n    color: white;\r\n    border: unset;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    display: flex;\r\n    align-items:center;\r\n    max-height:40px;\r\n`\r\n\r\nexport default WorkRow\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\nimport { Context } from '../..';\r\nimport { FaPencil } from \"react-icons/fa6\";\r\nimport { changeProfImg } from '../../http/userAPI';\r\nimport { COMMON_ROUTE, OHTERS_ROUTE, SECURITY_ROUTE } from '../../utils/const';\r\nimport SwimMes from '../SwimMes';\r\n\r\n const SetMenu = observer((props) => {\r\n  const [popups, setPopups] = useState([]);\r\n    const location = useLocation()\r\n    const {user} = useContext(Context)\r\n    const isCommon = location.pathname === COMMON_ROUTE\r\n    const isSecurity = location.pathname === SECURITY_ROUTE\r\n    const isOthers = location.pathname === OHTERS_ROUTE\r\n\r\n    const path = process.env.REACT_APP_S3_IMG_URL + user.User.avatar\r\n    const [image, setImage] = useState(path)\r\n    const [checkImage, setCheckImage] = useState(false)\r\n    const [file,setFile] = useState('')\r\n    const onImageChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n        setFile(event.target.files[0])\r\n        setImage(URL.createObjectURL(event.target.files[0]));\r\n        setCheckImage(true)\r\n    }\r\n    }\r\n    const removeImg = (event) => {\r\n        setImage(path)\r\n        setCheckImage(false)\r\n        }\r\n    const click = async () =>{\r\n        let data;\r\n        let mes;\r\n        const formData = new FormData()\r\n        formData.append('id', user.User.id)\r\n        formData.append('login', user.User.login)\r\n        formData.append('file', file)\r\n        data = await changeProfImg(formData)\r\n        user.setUser(data)\r\n        setCheckImage(false)\r\n        mes = 'Фото обновлено'\r\n        const newPopup = { id: Date.now(), mes }\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n    }\r\n    const linkSt = {\r\n        cursor:'auto',\r\n      }\r\n      \r\n      const linkSelect = {\r\n        backgroundColor: '#2e3442',\r\n      }\r\n  return (\r\n    <Menu className='profWind'>\r\n      {popups.map(popup => (\r\n        <SwimMes key={popup.id} text={popup.mes} />\r\n      ))}\r\n    <ContPfoto>\r\n      <ProfImg>\r\n        <PhotoBox>\r\n          <Photo className='imgHov' style={{backgroundImage: `url(${image})`}}>\r\n\r\n          </Photo>\r\n          {\r\n            checkImage?\r\n            <div className='wrapImgBlock'>\r\n              <div onClick={click} style={{background: '#02CC02',}} className='sucANDrem'>\r\n                +\r\n              </div>\r\n              <div onClick={removeImg} style={{background: '#ff0202',}} className='sucANDrem'>\r\n                X\r\n              </div>\r\n            </div>\r\n            :\r\n            ''\r\n          }\r\n          <div className='wrapImg imgHov'>\r\n            <input id=\"fileInput\" style={{display:'none'}} type=\"file\" onChange={onImageChange} />\r\n            <label className='inpLogo' htmlFor=\"fileInput\"><FaPencil style={{width:30,height:30}} /></label>\r\n          </div>\r\n        </PhotoBox>\r\n        {user.User.login}\r\n        \r\n      </ProfImg>\r\n    </ContPfoto>\r\n    <ContMenu>\r\n      <div className='setLink' style={linkSt}>Настройки</div>\r\n      <Link className='setLink setLinkHov' style={ isCommon ? linkSelect:  {}} to={!isCommon && COMMON_ROUTE}>Общее</Link>\r\n      <Link className='setLink setLinkHov' style={isSecurity ? linkSelect: {}} to={!isSecurity && SECURITY_ROUTE}>Безопасность</Link>\r\n      {/*<Link className='setLink setLinkHov' style={isOthers ? linkSelect: {}} to={!isOthers && OHTERS_ROUTE}>конфидециальность</Link>*/}\r\n    </ContMenu>\r\n  </Menu>\r\n  )\r\n})\r\n\r\nconst Menu = styled.div`\r\n  flex: 1 1 20%;\r\n  padding: 20px 0;\r\n  margin: 0px;\r\n  border-radius: 0px;\r\n  padding: 10px 0;\r\n    display: flex;\r\n    height: 100%;\r\n    background-color: #262b37;\r\n    flex-direction: column;\r\n`\r\nconst ContPfoto = styled.div`\r\n  padding: 0 0 20px 0;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid #2d3340;\r\n  margin: auto;\r\n  display: flex;\r\n  min-width: 200px;\r\n  min-height: 100px;\r\n  flex-direction: column;\r\n`\r\nconst ContMenu = styled.div`\r\n    flex: 1 1 70%;\r\n    width: 100%;\r\n    justify-content: center;\r\n    margin: auto;\r\n    display: flex;\r\n    min-width: 200px;\r\n    min-height: 100px;\r\n    flex-direction: column;\r\n`\r\nconst ProfImg = styled.div`\r\n    position: relative;\r\n    text-align: center;\r\n`\r\nconst PhotoBox = styled.div`\r\n    padding: 25px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 10px;\r\n    position: relative;\r\n    width: auto;\r\n    background-color: unset;\r\n`\r\nconst Photo = styled.div`\r\n    background-size: no-repeat;\r\n    background-position: center;\r\n    background-size: cover;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: .5s ease;\r\n    height: 100px;\r\n    width: 100px;\r\n    border-radius: 10px;\r\n`\r\n\r\nexport default SetMenu","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\nimport { Context } from '..';\r\nimport WrapperCont2 from '../components/wrapper/WrapperCont2';\r\nimport { COMMON_ROUTE, OHTERS_ROUTE, SECURITY_ROUTE } from '../utils/const';\r\nimport WorkRow from '../components/settings/WorkRow';\r\nimport SetMenu from '../components/settings/SetMenu';\r\nimport { changeProfCommon, changeProfOther, changeProfSecurity } from '../http/userAPI';\r\nimport SwimMes from '../components/SwimMes';\r\n\r\nconst  Settings = observer(() => {\r\n  const [popups, setPopups] = useState([]);\r\n  const location = useLocation()\r\n  const {user} = useContext(Context)\r\n  const isCommon = location.pathname === COMMON_ROUTE\r\n  const isSecurity = location.pathname === SECURITY_ROUTE\r\n  const isOthers = location.pathname === OHTERS_ROUTE\r\n  const [login, setLogin] = useState(user.User.login)\r\n  const [email, setEmail] = useState(user.User.email)\r\n  const [refCode, setRefCode] = useState(user.User.code)\r\n  const [name, setName] = useState(user.User.usname == 'null' ? '' : user.User.usname)\r\n  const [surName, setSurName] = useState(user.User.ussurname == 'null' ? '' : user.User.ussurname)\r\n\r\n  const commonClick = async () => {\r\n    let data;\r\n    let mes;\r\n    const formData = new FormData()\r\n    formData.append('id', user.User.id)\r\n    formData.append('login', login)\r\n    formData.append('email', email)\r\n    formData.append('name', name)\r\n    formData.append('surname', surName)\r\n    formData.append('refCode', refCode)\r\n    data = await changeProfCommon(formData)\r\n    if(data[0]){\r\n      user.setUser(data[1])\r\n      mes = 'Изменения сохранены';\r\n      const newPopup = { id: Date.now(), mes }\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n    }\r\n    else{\r\n      mes = data[1].response.data.message\r\n      const newPopup = { id: Date.now(), mes }\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n    }\r\n  }\r\n\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [confPassword, setConfPassword] = useState('')\r\n  const [nowPassword, setNowPassword] = useState('')\r\n\r\n  const securityClick = async () => {\r\n    let data;\r\n    let mes;\r\n    const formData = new FormData()\r\n    formData.append('id', user.User.id)\r\n    formData.append('password', newPassword)\r\n    formData.append('nowPassword', nowPassword)\r\n    data = await changeProfSecurity(formData)\r\n    if(data[0]){\r\n      user.setUser(data[1])\r\n      mes = 'Изменения сохранены';\r\n      const newPopup = { id: Date.now(), mes }\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n    }\r\n    else{\r\n      mes = data[1].response.data.message\r\n      const newPopup = { id: Date.now(), mes }\r\n        setPopups(prevPopups => [...prevPopups, newPopup]);\r\n\r\n        // Удаляем всплывающее окно через 5 секунд\r\n        setTimeout(() => {\r\n        setPopups(prevPopups => prevPopups.filter(popup => popup.id !== newPopup.id));\r\n        }, 5000);\r\n    }\r\n    \r\n  }\r\n\r\n  const [checkLogin,setCheckLogin] = useState(user.User.confLogin)\r\n  const [checkPhoto,setCheckPhoto] = useState(user.User.confPhoto)\r\n  const [checkStat,setCheckStat] = useState(user.User.confStat)\r\n    const checkSlideLogin = (e) =>{\r\n      setCheckLogin((currentValue) => !currentValue)\r\n      \r\n    }\r\n    const checkSlidePhoto = (e) =>{\r\n      setCheckPhoto((currentValue) => !currentValue)\r\n    }\r\n    const checkSlideStat = (e) =>{\r\n      setCheckStat((currentValue) => !currentValue)\r\n    }\r\n    \r\n    let heightLogin = 0\r\n    let widthLogin = 0\r\n    \r\n    let heightPhoto = 0\r\n    let widthPhoto = 0\r\n\r\n    let heightStat = 0\r\n    let widthStat = 0\r\n    \r\n\r\n\r\n    if (user.User.confLogin){\r\n      heightLogin = 30\r\n      widthLogin = 30\r\n    }\r\n    else{\r\n      heightLogin = 0 \r\n      widthLogin = 0\r\n    }\r\n    if (user.User.confPhoto){\r\n      heightPhoto = 30\r\n      widthPhoto = 30\r\n    }\r\n    else{\r\n      heightPhoto = 0 \r\n      widthPhoto = 0\r\n    }\r\n    if (user.User.confStat){\r\n      heightStat = 30\r\n      widthStat = 30\r\n    }\r\n    else{\r\n      heightStat = 0 \r\n      widthStat = 0\r\n    }\r\n\r\n    const otherClick = async () => {\r\n      const formData = new FormData()\r\n      formData.append('id', user.User.id)\r\n      formData.append('confLogin', checkLogin)\r\n      formData.append('confPhoto', checkPhoto)\r\n      formData.append('confStat', checkStat)\r\n      let data = await changeProfOther(formData)\r\n    }\r\n  return (\r\n    <Wrapperr>\r\n      {popups.map(popup => (\r\n        <SwimMes key={popup.id} text={popup.mes} />\r\n      ))}\r\n      <ContentBody>\r\n        <WrapSet>\r\n              <RowItem1 className='style_col'>\r\n                <SetMenu />\r\n                <WorkZone className='profWind'>\r\n                  {\r\n                    isCommon && \r\n                  <ContWork>\r\n                    <WorkRow func = {e => setLogin(e.target.value)} val = {login} labelValue={'Логин'} inputPlaceholder={'Введите новый логин'} />\r\n                    <WorkRow func = {e => setEmail(e.target.value)} val = {email}  labelValue={'Почта'} inputPlaceholder={'Введите почту'} />\r\n                    <WorkRow \r\n                      func = {e => setName(e.target.value)} val = {name}\r\n                      func1 = {e => setSurName(e.target.value)} val1 = {surName} \r\n                      doubleRow={true} \r\n                      labelValue={'Имя'} inputPlaceholder={'Введите имя'} \r\n                      labelValue1={'Фамилия'} inputPlaceholder1={'Введите фамилию'}\r\n                     />\r\n                    <WorkRow func = {e => setRefCode(e.target.value)}  labelValue={'Ваш пригласительный код'} val={refCode} myref={user.User.code}/>\r\n                    <SetBut onClick={commonClick} className='SetBut'>Сохранить данные</SetBut>\r\n                  </ContWork>\r\n                  }\r\n                  {\r\n                    isSecurity &&\r\n                  <ContWork style={{justifyContent:'flex-start'}}>\r\n                    <WorkRow labelValue={'Текущий пароль'} inputPlaceholder={'Текущий пароль'} val ={nowPassword} func = {e => setNowPassword(e.target.value)} />\r\n                    <WorkRow \r\n                      doubleRow={true} \r\n                      labelValue={'Новый пароль'} inputPlaceholder={'Новый пароль'} val={newPassword} func={e => setNewPassword(e.target.value)}\r\n                      labelValue1={'Подтверждение нового пароля'} inputPlaceholder1={'Подтверждение нового пароля'} val1={confPassword} func1={e => setConfPassword(e.target.value)}\r\n                    />\r\n                    <SetBut \r\n                    onClick={securityClick} className='SetBut'\r\n                    disabled={\r\n                      (newPassword !== confPassword) || (nowPassword.length<4) || (newPassword.length<4)\r\n                      ? \r\n                      true\r\n                      : \r\n                      false\r\n                      }\r\n                    >{\r\n                      nowPassword.length>4 & newPassword.length>4\r\n                    ?\r\n                    (newPassword === confPassword \r\n                      ? \r\n                      'Сохранить данные' \r\n                      : \r\n                      'Пароли не совпадают')\r\n                    :\r\n                    'Длинна пароля должна быть больше 4 символов'}</SetBut>\r\n                  </ContWork>\r\n                  }\r\n                  {\r\n                    /*isOthers &&\r\n                  <ContWork style={{justifyContent:'flex-start'}}>\r\n                    <OtherEl heightmy={heightLogin} widthmy={widthLogin} func={checkSlideLogin} text={'Скрыть логин'} />\r\n                    <OtherEl heightmy={heightPhoto} widthmy={widthPhoto} func={checkSlidePhoto} text={'Скрыть фотографию'} />\r\n                    <OtherEl heightmy={heightStat} widthmy={widthStat} func={checkSlideStat} text={'Скрыть статистику'} />\r\n                    <SetBut onClick={otherClick} className='SetBut'>Сохранить данные</SetBut>\r\n                  </ContWork>*/\r\n                  }\r\n                  \r\n                </WorkZone>\r\n              </RowItem1>    \r\n        </WrapSet>\r\n        <WrapperCont2 mystyle={{flex: '0 1 auto'}}/>\r\n      </ContentBody>\r\n    </Wrapperr>\r\n  )\r\n})\r\n\r\nconst ContWork = styled.div`\r\n    font-family: Georgia, serif;\r\n    padding: 0;\r\n    width: auto;\r\n    flex: 1 1 auto;\r\n    justify-content: space-around;\r\n    background-color: #0f0f1000;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    border-radius: 10px;\r\n`\r\n\r\nconst Wrapperr = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  margin-top: 75px;\r\n  flex: 1 1 auto;\r\n  padding-top:10px;\r\n  width:100%;\r\n  min-height: calc(100vh - 197px);\r\n  justify-content: center;\r\n  border-top: 0.5px solid #2d3340;\r\n`\r\nconst ContentBody = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  flex: 1 1 auto;\r\n`\r\nconst WrapSet = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    width: 100%;\r\n    min-height: 100px;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n    color: white;\r\n`\r\n\r\nconst RowItem1 = styled.div`\r\n    margin-right: 5px;\r\n    flex: 1 1 auto;\r\n    padding: 10px;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    display: flex;\r\n    border-radius: 10px;\r\n`\r\n\r\nconst WorkZone = styled.div`\r\n  flex: 1 1 80%;\r\n  justify-content: space-around;\r\n  background-color: #2e3442;\r\n  margin: 0px;\r\n  border-radius: 0px;\r\n  padding: 10px;\r\n    display: flex;\r\n    height: 100%;\r\n`\r\n\r\n\r\nconst SetBut = styled.button`\r\n    font-family: Georgia, serif;\r\n    font-size: 13pt;\r\n    border-radius: 10px;\r\n    color: white;\r\n    min-height: 40px;\r\n    border: 1px solid #f6a617;\r\n    background: none;\r\n    margin: 0 20px;\r\n    cursor: pointer;\r\n    transition: all 0.7s;\r\n    margin-top:10px;\r\n`\r\n\r\nexport default Settings; \r\n","import Admin from \"./pages/Admin\"\r\nimport Auth from \"./pages/Auth\"\r\nimport Game from \"./pages/Game\"\r\nimport Learn from \"./pages/Learn\"\r\nimport Profile from \"./pages/Profile\"\r\nimport Questions from \"./pages/Questions\"\r\nimport Reviews from \"./pages/Reviews\"\r\nimport Rooms from \"./pages/Rooms\"\r\nimport Settings from \"./pages/Settings\"\r\nimport { COMMON_ROUTE, GAME_ROUTE, LOGIN_ROUTE, OHTERS_ROUTE, PROFILE_ROUTE, REGISTRATION_ROUTE, REVIEWS_ROUTE, ROOMS_ROUTE, SECURITY_ROUTE, SETTINGS_ROUTE, QUESTIONS_ROUTE, SECONDSTAGE_ROUTE, FIRSTSTAGE_ROUTE, THIRDSTAGE_ROUTE, MARKETING_ROUTE, ADMIN_ROUTE } from \"./utils/const\"\r\n\r\nexport const learnRouteFirst = [\r\n    {\r\n        path: FIRSTSTAGE_ROUTE,\r\n        Component: Learn,\r\n    },\r\n    {\r\n        path: ROOMS_ROUTE,\r\n        Component: Rooms,\r\n    },\r\n]\r\nexport const learnRouteSecond = [\r\n    {\r\n        path: SECONDSTAGE_ROUTE,\r\n        Component: Learn,\r\n    },\r\n]\r\nexport const learnRouteThird = [\r\n    {\r\n        path: THIRDSTAGE_ROUTE,\r\n        Component: Learn,\r\n    },\r\n]\r\nexport const authRoutes = [\r\n    {\r\n        path: COMMON_ROUTE,\r\n        Component: Settings,\r\n    },\r\n    {\r\n        path: SECURITY_ROUTE,\r\n        Component: Settings,\r\n    },\r\n    {\r\n        path: OHTERS_ROUTE,\r\n        Component: Settings,\r\n    },\r\n]\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: GAME_ROUTE,\r\n        Component: Game,\r\n    },\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Auth,\r\n    },\r\n    {\r\n        path: REGISTRATION_ROUTE,\r\n        Component: Auth,\r\n    },\r\n    {\r\n        path: REVIEWS_ROUTE,\r\n        Component: Reviews,\r\n    },\r\n    {\r\n        path: PROFILE_ROUTE + '/:id',\r\n        Component: Profile,\r\n    },\r\n    {\r\n        path: QUESTIONS_ROUTE,\r\n        Component: Questions,\r\n    },\r\n    {\r\n        path: MARKETING_ROUTE,\r\n        Component: Learn,\r\n    },\r\n]\r\n\r\nexport const adminRoutes = [\r\n    {\r\n        path: ADMIN_ROUTE,\r\n        Component: Admin,\r\n    },\r\n]","import React, { useContext } from 'react'\r\n//import styled from 'styled-components'\r\nimport {Routes, Route, Navigate} from 'react-router-dom'\r\nimport { adminRoutes, authRoutes, learnRouteFirst, learnRouteSecond, learnRouteThird, publicRoutes } from '../routes'\r\nimport { GAME_ROUTE } from '../utils/const'\r\nimport { Context } from '../index'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\n\r\nconst  AppRouter = observer(() => {\r\n    const {user} = useContext(Context)\r\n  return (\r\n    <Routes>\r\n        {(user.isAuth & user.User.role === 'ADMIN') && adminRoutes.map(({path, Component}) => \r\n            <Route key={path} path={path} element = {<Component />} />\r\n        )}\r\n        {(user.isAuth & user.User.room >= 1) && learnRouteFirst.map(({path, Component}) => \r\n            <Route key={path} path={path} element = {<Component />} />\r\n        )}\r\n        {(user.isAuth & user.User.roomlvl >= 2) && learnRouteSecond.map(({path, Component}) => \r\n            <Route key={path} path={path} element = {<Component />} />\r\n        )}\r\n        {(user.isAuth & user.User.roomlvl >= 3) && learnRouteThird.map(({path, Component}) => \r\n            <Route key={path} path={path} element = {<Component />} />\r\n        )}\r\n        {user.isAuth && authRoutes.map(({path, Component}) => \r\n            <Route key={path} path={path} element = {<Component />} />\r\n        )}\r\n        {publicRoutes.map(({path, Component}) =>\r\n            <Route key={path} path={path} element = {<Component />} />)\r\n        }\r\n        <Route path=\"*\" element={ <Navigate to={GAME_ROUTE} replace={true} /> } />\r\n    </Routes>\r\n  )\r\n})\r\nexport default AppRouter; \r\n","export const  GAME_ROUTE = '/'\r\nexport const  LOGIN_ROUTE = '/login'\r\nexport const  REGISTRATION_ROUTE = '/registration'\r\nexport const  PROFILE_ROUTE = '/profile'\r\nexport const  SETTINGS_ROUTE = '/settings'\r\nexport const  COMMON_ROUTE = SETTINGS_ROUTE + '/common'\r\nexport const  SECURITY_ROUTE = SETTINGS_ROUTE + '/security'\r\nexport const  OHTERS_ROUTE = SETTINGS_ROUTE + '/others'\r\nexport const  ROOMS_ROUTE = '/room'\r\nexport const REVIEWS_ROUTE = '/reviews'\r\nexport const QUESTIONS_ROUTE = '/questions'\r\n\r\nexport const  LEARN_ROUTE = '/learn'\r\nexport const FIRSTSTAGE_ROUTE = LEARN_ROUTE + '/firststage'\r\nexport const SECONDSTAGE_ROUTE = LEARN_ROUTE + '/secondstage'\r\nexport const THIRDSTAGE_ROUTE = LEARN_ROUTE + '/thirdstage'\r\nexport const MARKETING_ROUTE = LEARN_ROUTE + '/marketing'\r\n\r\n\r\n\r\n\r\nexport const TGBOT_ROUTE = 'https://t.me/MS_pomoshnik_bot'\r\nexport const TGCHAN_ROUTE = 'https://t.me/perehodnik_ms'\r\n\r\n\r\nexport const ADMIN_ROUTE = '/AdmPan'"],"names":["_ref","text","isVisible","setIsVisible","useState","useEffect","timer","setTimeout","clearTimeout","_jsx","_Fragment","children","className","style","backgroundColor","Element","styled","div","_templateObject","_taggedTemplateLiteral","EL","_templateObject2","But","button","_templateObject3","Data","_templateObject4","Input","input","_templateObject5","Wrapper","_templateObject6","Admin","banId","setBanId","debouncedValue","setDebouncedValue","banLogin","setBanLogin","banEmail","setBanEmail","banBalance","setBanBalance","banStatus","setBanStatus","popups","setPopups","debouncedValue1","setDebouncedValue1","popolnId","setPopoknId","popolnBal","setPopolnBal","loginBal","setLoginBal","plusBal","setPlusBal","handler","GetBanUs","async","data","$authhost","get","concat","id","httpGetBanUser","value","login","email","balance","isBanned","error","console","GetBalUs","httpGetBalUser","_jsxs","placeholder","onChange","e","target","onClick","formData","FormData","append","post","postus","httpPostUserBan","newPopup","Date","now","prevPopups","filter","popup","parseInt","httpPostUserBal","map","SwimMes","observer","location","useLocation","navigate","useNavigate","isLogin","pathname","LOGIN_ROUTE","user","useContext","Context","loginForm","setLoginForm","password","setPassword","confirmPassword","setConfirmPassword","setEmail","file","setFile","code","setCode","AuthCon","maxWidth","flex","display","flexWrap","color","border","padding","width","textAlign","flexDirection","justifyContent","type","files","registration","setUser","setIsAuth","GAME_ROUTE","response","message","NavLink","to","REGISTRATION_ROUTE","httpGetMyRooms","price","httpPostJoin","WrapButtons","props","newCost","val","WrapButtonst","Link","go","background","margin","height","minHeight","maxHeight","alignItems","borderRadius","cursor","transitionDuration","row","Buttonst","isAuth","User","mes","roomlvl","room","useLeader","ROOMS_ROUTE","PassF","Lead","useLead","level","progressWidth","setProgressWidth","WrapButtonsMob","joinFunc","Menu","WrapBut","Cont","showModal","MARKETING_ROUTE","position","fontSize","WrapperCont1","show","setShow","httpGetDiscount","then","setLead","listUs","leader","setUseLead","setProgress","progress","BGBalance","backgroundImage","process","end","setEnd","WrapperrCont","RowItem1","ContBar","ProgressBar","TextWrap","href","RowItem2","RowItem2El1","RowItem2El2","TGCHAN_ROUTE","SwimBut","MenuMobile","closest","querySelector","textContent","trim","EndModalContainer","EndModal","ModalTextCont","ModalText","ModalContSum","ModalSum","BalansImg","ModalButton","httpEnd0","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","StatRow","StatRowst","start","El","WrapperCont2","stat10001lvl","setstat10001lvl","stat10002lvl","setstat10002lvl","stat10003lvl","setstat10003lvl","stat25001lvl","setstat25001lvl","stat25002lvl","setstat25002lvl","stat25003lvl","setstat25003lvl","stat50001lvl","setstat50001lvl","stat50002lvl","setstat50002lvl","stat50003lvl","setstat50003lvl","stat100001lvl","setstat100001lvl","stat100002lvl","setstat100002lvl","stat100003lvl","setstat100003lvl","$host","httpGetStat","room1lvl","room2lvl","room3lvl","WrapperCont","mystyle","RowItem","Wrapperr","ContentBody","Game","FirstStage","Info","Div","marginLeft","Market","COMMON_ROUTE","window","history","back","SecondStage","ThirdStage","WrapSet","Learn","is1St","FIRSTSTAGE_ROUTE","is2St","SECONDSTAGE_ROUTE","is3St","THIRDSTAGE_ROUTE","httpGetProf","ProfInfo","profInfost","path","avatar","img","Ava","Log","Profile","allPopoln","setAllPopoln","allVivod","setAllVivod","useParams","setLogin","profile","setAvatar","historyPopoln","historyVivel","WorkZone","WorkRow","WRBlock","TextBl","a","ButA","Section","Questions","hide","setHide","highlightedSection","setHighlightedSection","containerRef","useRef","scrollToSection","sectionId","section","document","getElementById","current","scrollTo","top","offsetTop","behavior","ref","httpGetRewiews","page","limit","AdmDel","RewImg","span","Text","NameText","rewiew","rewiews","ws","stylelist","backgroundPosition","backgroundRepeat","backgroundSize","PROFILE_ROUTE","usId","alt","role","httpPostRewiewDel","WebSocket","onopen","send","JSON","stringify","setRewiews","rows","setTotalCount","count","Pages","pageCount","Math","ceil","totalCount","pages","activeSt","i","push","Pagination","PaginationEl","setPage","Reviews","onmessage","event","close","textForm","setTextForm","alignSelf","RewCont","Rew","ReviewsText","SendRew","ContRew","RewInput","RewBut","httpPostRewiew","goReg","RoomButtons","act","Firstlvl","extendedArray","Row","item","index","Secondlvl","Thirdlvl","ViewRoom","extendedArray1","MyRoom","firLvl","length","extendedArray2","seclvl","extendedArray3","thirlvl","Swim1","Swim2","Col","MinCol","stolb","slice","WrapperContRoom","TestEl","Rooms","loading","setLoading","paddingTop","borderTop","setMyRoom","finally","Spinner","animation","TextAnimation","Wrap","Label","label","InpRow","ContRef","Copy","labelValue","func","inputPlaceholder","handleCopyClick","textArea","createElement","myref","left","outline","boxShadow","body","appendChild","focus","select","execCommand","err","removeChild","doubleRow","labelValue1","func1","val1","inputPlaceholder1","SetMenu","isCommon","isSecurity","SECURITY_ROUTE","OHTERS_ROUTE","image","setImage","checkImage","setCheckImage","linkSelect","ContPfoto","ProfImg","PhotoBox","Photo","changeProfImg","URL","createObjectURL","htmlFor","FaPencil","ContMenu","Settings","refCode","setRefCode","name","setName","usname","surName","setSurName","ussurname","newPassword","setNewPassword","confPassword","setConfPassword","nowPassword","setNowPassword","checkLogin","setCheckLogin","confLogin","checkPhoto","setCheckPhoto","confPhoto","checkStat","setCheckStat","confStat","heightLogin","widthLogin","heightPhoto","widthPhoto","heightStat","widthStat","ContWork","SetBut","changeProfCommon","changeProfSecurity","disabled","learnRouteFirst","Component","learnRouteSecond","learnRouteThird","authRoutes","publicRoutes","Auth","REVIEWS_ROUTE","QUESTIONS_ROUTE","adminRoutes","ADMIN_ROUTE","Routes","Route","element","_ref2","_ref3","_ref4","_ref5","_ref6","Navigate","replace","SETTINGS_ROUTE","LEARN_ROUTE","TGBOT_ROUTE"],"sourceRoot":""}